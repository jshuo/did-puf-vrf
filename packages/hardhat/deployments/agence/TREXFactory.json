{
  "address": "0x1c6d9761A8a066eea9c7134420A2eB89FFbFF9Cb",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "Deployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_implementationAuthority",
          "type": "address"
        }
      ],
      "name": "ImplementationAuthoritySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_ir",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_irs",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_tir",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_ctr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_mc",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "_salt",
          "type": "string"
        }
      ],
      "name": "TREXSuiteDeployed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_salt",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "uint8",
              "name": "decimals",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "irs",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "ONCHAINID",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "irAgents",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "tokenAgents",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "complianceModules",
              "type": "address[]"
            },
            {
              "internalType": "bytes[]",
              "name": "complianceSettings",
              "type": "bytes[]"
            }
          ],
          "internalType": "struct ITREXFactory.TokenDetails",
          "name": "_tokenDetails",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256[]",
              "name": "claimTopics",
              "type": "uint256[]"
            },
            {
              "internalType": "address[]",
              "name": "issuers",
              "type": "address[]"
            },
            {
              "internalType": "uint256[][]",
              "name": "issuerClaims",
              "type": "uint256[][]"
            }
          ],
          "internalType": "struct ITREXFactory.ClaimDetails",
          "name": "_claimDetails",
          "type": "tuple"
        }
      ],
      "name": "deployTREXSuite",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getImplementationAuthority",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_salt",
          "type": "string"
        }
      ],
      "name": "getToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "recoverContractOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "implementationAuthority_",
          "type": "address"
        }
      ],
      "name": "setImplementationAuthority",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "tokenDeployed",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x335a895ee2f452d0d6cdafbf0335a845b48d4c58e9e83367d37b57bc018e1c7d",
  "receipt": {
    "to": null,
    "from": "0xfC10126E2F41cbB264BceEE6c6093133AA45f317",
    "contractAddress": "0x1c6d9761A8a066eea9c7134420A2eB89FFbFF9Cb",
    "transactionIndex": 0,
    "gasUsed": "5020422",
    "logsBloom": "0x
    "blockHash": "0x614e5915a5a027604ffa020f41e9db49aaf95a16a98d9e252b9b5cc01e414abb",
    "transactionHash": "0x335a895ee2f452d0d6cdafbf0335a845b48d4c58e9e83367d37b57bc018e1c7d",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 12752968,
        "transactionHash": "0x335a895ee2f452d0d6cdafbf0335a845b48d4c58e9e83367d37b57bc018e1c7d",
        "address": "0x1c6d9761A8a066eea9c7134420A2eB89FFbFF9Cb",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000fc10126e2f41cbb264bceee6c6093133aa45f317"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x614e5915a5a027604ffa020f41e9db49aaf95a16a98d9e252b9b5cc01e414abb"
      }
    ],
    "blockNumber": 12752968,
    "cumulativeGasUsed": "5020422",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "f69367090d7184c7f33f2a160d9a791d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"Deployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_implementationAuthority\",\"type\":\"address\"}],\"name\":\"ImplementationAuthoritySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_ir\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_irs\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_tir\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_ctr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_mc\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"_salt\",\"type\":\"string\"}],\"name\":\"TREXSuiteDeployed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_salt\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"irs\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ONCHAINID\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"irAgents\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"tokenAgents\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"complianceModules\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"complianceSettings\",\"type\":\"bytes[]\"}],\"internalType\":\"struct ITREXFactory.TokenDetails\",\"name\":\"_tokenDetails\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"claimTopics\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"issuers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"issuerClaims\",\"type\":\"uint256[][]\"}],\"internalType\":\"struct ITREXFactory.ClaimDetails\",\"name\":\"_claimDetails\",\"type\":\"tuple\"}],\"name\":\"deployTREXSuite\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getImplementationAuthority\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_salt\",\"type\":\"string\"}],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"recoverContractOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementationAuthority_\",\"type\":\"address\"}],\"name\":\"setImplementationAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"tokenDeployed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deployTREXSuite(string,(address,string,string,uint8,address,address,address[],address[],address[],bytes[]),(uint256[],address[],uint256[][]))\":{\"details\":\"See {ITREXFactory-deployTREXSuite}.\"},\"getImplementationAuthority()\":{\"details\":\"See {ITREXFactory-getImplementationAuthority}.\"},\"getToken(string)\":{\"details\":\"See {ITREXFactory-getToken}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"recoverContractOwnership(address,address)\":{\"details\":\"See {ITREXFactory-recoverContractOwnership}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setImplementationAuthority(address)\":{\"details\":\"See {ITREXFactory-setImplementationAuthority}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"Deployed(address)\":{\"notice\":\"event emitted whenever a single contract is deployed by the factory\"},\"ImplementationAuthoritySet(address)\":{\"notice\":\"event emitted when the implementation authority of the factory contract is set\"},\"TREXSuiteDeployed(address,address,address,address,address,address,string)\":{\"notice\":\"event emitted by the factory when a full suite of T-REX contracts is deployed\"}},\"kind\":\"user\",\"methods\":{\"tokenDeployed(string)\":{\"notice\":\"mapping containing info about the token contracts corresponding to salt already used for CREATE2 deployments\"}},\"notice\":\"NOTICE     The T-REX software is licensed under a proprietary license or the GPL v.3.     If you choose to receive it under the GPL v.3 license, the following applies:     T-REX is a suite of smart contracts developed by Tokeny to manage and transfer financial assets on the ethereum blockchain     Copyright (C) 2022, Tokeny s\\u00e0rl.     This program is free software: you can redistribute it and/or modify     it under the terms of the GNU General Public License as published by     the Free Software Foundation, either version 3 of the License, or     (at your option) any later version.     This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU General Public License for more details.     You should have received a copy of the GNU General Public License     along with this program.  If not, see <https://www.gnu.org/licenses/>.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TREXFactory.sol\":\"TREXFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TREXFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.17;\\n\\n// File: @openzeppelin/contracts/utils/Context.sol\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n\\tfunction _msgSender() internal view virtual returns (address) {\\n\\t\\treturn msg.sender;\\n\\t}\\n\\n\\tfunction _msgData() internal view virtual returns (bytes calldata) {\\n\\t\\treturn msg.data;\\n\\t}\\n}\\n\\n// File: @openzeppelin/contracts/access/Ownable.sol\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n\\taddress private _owner;\\n\\n\\tevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n\\t/**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n\\tconstructor() {\\n\\t\\t_transferOwnership(_msgSender());\\n\\t}\\n\\n\\t/**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n\\tmodifier onlyOwner() {\\n\\t\\t_checkOwner();\\n\\t\\t_;\\n\\t}\\n\\n\\t/**\\n     * @dev Returns the address of the current owner.\\n     */\\n\\tfunction owner() public view virtual returns (address) {\\n\\t\\treturn _owner;\\n\\t}\\n\\n\\t/**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n\\tfunction _checkOwner() internal view virtual {\\n\\t\\trequire(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n\\t}\\n\\n\\t/**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n\\tfunction renounceOwnership() public virtual onlyOwner {\\n\\t\\t_transferOwnership(address(0));\\n\\t}\\n\\n\\t/**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n\\tfunction transferOwnership(address newOwner) public virtual onlyOwner {\\n\\t\\trequire(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n\\t\\t_transferOwnership(newOwner);\\n\\t}\\n\\n\\t/**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n\\tfunction _transferOwnership(address newOwner) internal virtual {\\n\\t\\taddress oldOwner = _owner;\\n\\t\\t_owner = newOwner;\\n\\t\\temit OwnershipTransferred(oldOwner, newOwner);\\n\\t}\\n}\\n\\n// File: contracts/roles/Roles.sol\\n//\\n//                                             :+#####%%%%%%%%%%%%%%+\\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\\n//                                          +@@@@@. =@@@=  .+@@@@@*:\\n//                                          #@@@@#:%@@#. :*@@@@#-\\n//                                          @@@@@%@@@= :#@@@@+.\\n//                                         :@@@@@@@#.:#@@@%-\\n//                                         +@@@@@@-.*@@@*:\\n//                                         #@@@@#.=@@@+.\\n//                                         @@@@+-%@%=\\n//                                        :@@@#%@%=\\n//                                        +@@@@%-\\n//                                        :#%%=\\n//\\n\\n/**\\n *     NOTICE\\n *\\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\\n *     If you choose to receive it under the GPL v.3 license, the following applies:\\n *     T-REX is a suite of smart contracts developed by Tokeny to manage and transfer financial assets on the ethereum blockchain\\n *\\n *     Copyright (C) 2022, Tokeny s\\u00e0rl.\\n *\\n *     This program is free software: you can redistribute it and/or modify\\n *     it under the terms of the GNU General Public License as published by\\n *     the Free Software Foundation, either version 3 of the License, or\\n *     (at your option) any later version.\\n *\\n *     This program is distributed in the hope that it will be useful,\\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n *     GNU General Public License for more details.\\n *\\n *     You should have received a copy of the GNU General Public License\\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n/**\\n * @title Roles\\n * @dev Library for managing addresses assigned to a Role.\\n */\\nlibrary Roles {\\n\\tstruct Role {\\n\\t\\tmapping(address => bool) bearer;\\n\\t}\\n\\n\\t/**\\n     * @dev Give an account access to this role.\\n     */\\n\\tfunction add(Role storage role, address account) internal {\\n\\t\\trequire(!has(role, account), \\\"Roles: account already has role\\\");\\n\\t\\trole.bearer[account] = true;\\n\\t}\\n\\n\\t/**\\n     * @dev Remove an account's access to this role.\\n     */\\n\\tfunction remove(Role storage role, address account) internal {\\n\\t\\trequire(has(role, account), \\\"Roles: account does not have role\\\");\\n\\t\\trole.bearer[account] = false;\\n\\t}\\n\\n\\t/**\\n     * @dev Check if an account has this role.\\n     * @return bool\\n     */\\n\\tfunction has(Role storage role, address account) internal view returns (bool) {\\n\\t\\trequire(account != address(0), \\\"Roles: account is the zero address\\\");\\n\\t\\treturn role.bearer[account];\\n\\t}\\n}\\n\\n// File: contracts/roles/AgentRole.sol\\n//\\n//                                             :+#####%%%%%%%%%%%%%%+\\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\\n//                                          +@@@@@. =@@@=  .+@@@@@*:\\n//                                          #@@@@#:%@@#. :*@@@@#-\\n//                                          @@@@@%@@@= :#@@@@+.\\n//                                         :@@@@@@@#.:#@@@%-\\n//                                         +@@@@@@-.*@@@*:\\n//                                         #@@@@#.=@@@+.\\n//                                         @@@@+-%@%=\\n//                                        :@@@#%@%=\\n//                                        +@@@@%-\\n//                                        :#%%=\\n//\\n\\n/**\\n *     NOTICE\\n *\\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\\n *     If you choose to receive it under the GPL v.3 license, the following applies:\\n *     T-REX is a suite of smart contracts developed by Tokeny to manage and transfer financial assets on the ethereum blockchain\\n *\\n *     Copyright (C) 2022, Tokeny s\\u00e0rl.\\n *\\n *     This program is free software: you can redistribute it and/or modify\\n *     it under the terms of the GNU General Public License as published by\\n *     the Free Software Foundation, either version 3 of the License, or\\n *     (at your option) any later version.\\n *\\n *     This program is distributed in the hope that it will be useful,\\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n *     GNU General Public License for more details.\\n *\\n *     You should have received a copy of the GNU General Public License\\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\ncontract AgentRole is Ownable {\\n\\tusing Roles for Roles.Role;\\n\\n\\tRoles.Role private _agents;\\n\\n\\tevent AgentAdded(address indexed _agent);\\n\\tevent AgentRemoved(address indexed _agent);\\n\\n\\tmodifier onlyAgent() {\\n\\t\\trequire(isAgent(msg.sender), \\\"AgentRole: caller does not have the Agent role\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\tfunction addAgent(address _agent) public onlyOwner {\\n\\t\\trequire(_agent != address(0), \\\"invalid argument - zero address\\\");\\n\\t\\t_agents.add(_agent);\\n\\t\\temit AgentAdded(_agent);\\n\\t}\\n\\n\\tfunction removeAgent(address _agent) public onlyOwner {\\n\\t\\trequire(_agent != address(0), \\\"invalid argument - zero address\\\");\\n\\t\\t_agents.remove(_agent);\\n\\t\\temit AgentRemoved(_agent);\\n\\t}\\n\\n\\tfunction isAgent(address _agent) public view returns (bool) {\\n\\t\\treturn _agents.has(_agent);\\n\\t}\\n}\\n\\n// File: @onchain-id/solidity/contracts/interface/IERC734.sol\\n\\n/**\\n * @dev interface of the ERC734 (Key Holder) standard as defined in the EIP.\\n */\\ninterface IERC734 {\\n\\n\\t/**\\n     * @dev Emitted when an execution request was approved.\\n     *\\n     * Specification: MUST be triggered when approve was successfully called.\\n     */\\n\\tevent Approved(uint256 indexed executionId, bool approved);\\n\\n\\t/**\\n     * @dev Emitted when an execute operation was approved and successfully performed.\\n     *\\n     * Specification: MUST be triggered when approve was called and the execution was successfully approved.\\n     */\\n\\tevent Executed(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\\n\\n\\t/**\\n     * @dev Emitted when an execution request was performed via `execute`.\\n     *\\n     * Specification: MUST be triggered when execute was successfully called.\\n     */\\n\\tevent ExecutionRequested(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\\n\\n\\t/**\\n     * @dev Emitted when an execute operation was called and failed\\n     *\\n     * Specification: MUST be triggered when execute call failed\\n     */\\n\\tevent ExecutionFailed(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\\n\\n\\t/**\\n     * @dev Emitted when a key was added to the Identity.\\n     *\\n     * Specification: MUST be triggered when addKey was successfully called.\\n     */\\n\\tevent KeyAdded(bytes32 indexed key, uint256 indexed purpose, uint256 indexed keyType);\\n\\n\\t/**\\n     * @dev Emitted when a key was removed from the Identity.\\n     *\\n     * Specification: MUST be triggered when removeKey was successfully called.\\n     */\\n\\tevent KeyRemoved(bytes32 indexed key, uint256 indexed purpose, uint256 indexed keyType);\\n\\n\\t/**\\n     * @dev Adds a _key to the identity. The _purpose specifies the purpose of the key.\\n     *\\n     * Triggers Event: `KeyAdded`\\n     *\\n     * Specification: MUST only be done by keys of purpose 1, or the identity\\n     * itself. If it's the identity itself, the approval process will determine its approval.\\n     */\\n\\tfunction addKey(bytes32 _key, uint256 _purpose, uint256 _keyType) external returns (bool success);\\n\\n\\t/**\\n    * @dev Approves an execution.\\n    *\\n    * Triggers Event: `Approved`\\n    * Triggers on execution successful Event: `Executed`\\n    * Triggers on execution failure Event: `ExecutionFailed`\\n    */\\n\\tfunction approve(uint256 _id, bool _approve) external returns (bool success);\\n\\n\\t/**\\n     * @dev Removes _purpose for _key from the identity.\\n     *\\n     * Triggers Event: `KeyRemoved`\\n     *\\n     * Specification: MUST only be done by keys of purpose 1, or the identity itself.\\n     * If it's the identity itself, the approval process will determine its approval.\\n     */\\n\\tfunction removeKey(bytes32 _key, uint256 _purpose) external returns (bool success);\\n\\n\\t/**\\n     * @dev Passes an execution instruction to an ERC734 identity.\\n     * How the execution is handled is up to the identity implementation:\\n     * An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to\\n     * approve this execution.\\n     * Execute COULD be used as the only accessor for `addKey` and `removeKey`.\\n     *\\n     * Triggers Event: ExecutionRequested\\n     * Triggers on direct execution Event: Executed\\n     */\\n\\tfunction execute(address _to, uint256 _value, bytes calldata _data) external payable returns (uint256 executionId);\\n\\n\\t/**\\n     * @dev Returns the full key data, if present in the identity.\\n     */\\n\\tfunction getKey(bytes32 _key) external view returns (uint256[] memory purposes, uint256 keyType, bytes32 key);\\n\\n\\t/**\\n     * @dev Returns the list of purposes associated with a key.\\n     */\\n\\tfunction getKeyPurposes(bytes32 _key) external view returns(uint256[] memory _purposes);\\n\\n\\t/**\\n     * @dev Returns an array of public key bytes32 held by this identity.\\n     */\\n\\tfunction getKeysByPurpose(uint256 _purpose) external view returns (bytes32[] memory keys);\\n\\n\\t/**\\n     * @dev Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\\n     */\\n\\tfunction keyHasPurpose(bytes32 _key, uint256 _purpose) external view returns (bool exists);\\n}\\n\\n// File: @onchain-id/solidity/contracts/interface/IERC735.sol\\n\\n\\n/**\\n * @dev interface of the ERC735 (Claim Holder) standard as defined in the EIP.\\n */\\ninterface IERC735 {\\n\\n\\t/**\\n     * @dev Emitted when a claim was added.\\n     *\\n     * Specification: MUST be triggered when a claim was successfully added.\\n     */\\n\\tevent ClaimAdded(\\n\\t\\tbytes32 indexed claimId,\\n\\t\\tuint256 indexed topic,\\n\\t\\tuint256 scheme,\\n\\t\\taddress indexed issuer,\\n\\t\\tbytes signature,\\n\\t\\tbytes data,\\n\\t\\tstring uri);\\n\\n\\t/**\\n     * @dev Emitted when a claim was removed.\\n     *\\n     * Specification: MUST be triggered when removeClaim was successfully called.\\n     */\\n\\tevent ClaimRemoved(\\n\\t\\tbytes32 indexed claimId,\\n\\t\\tuint256 indexed topic,\\n\\t\\tuint256 scheme,\\n\\t\\taddress indexed issuer,\\n\\t\\tbytes signature,\\n\\t\\tbytes data,\\n\\t\\tstring uri);\\n\\n\\t/**\\n     * @dev Emitted when a claim was changed.\\n     *\\n     * Specification: MUST be triggered when addClaim was successfully called on an existing claimId.\\n     */\\n\\tevent ClaimChanged(\\n\\t\\tbytes32 indexed claimId,\\n\\t\\tuint256 indexed topic,\\n\\t\\tuint256 scheme,\\n\\t\\taddress indexed issuer,\\n\\t\\tbytes signature,\\n\\t\\tbytes data,\\n\\t\\tstring uri);\\n\\n\\t/**\\n     * @dev Add or update a claim.\\n     *\\n     * Triggers Event: `ClaimAdded`, `ClaimChanged`\\n     *\\n     * Specification: Add or update a claim from an issuer.\\n     *\\n     * _signature is a signed message of the following structure:\\n     * `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`.\\n     * Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\\n     */\\n\\tfunction addClaim(\\n\\t\\tuint256 _topic,\\n\\t\\tuint256 _scheme,\\n\\t\\taddress issuer,\\n\\t\\tbytes calldata _signature,\\n\\t\\tbytes calldata _data,\\n\\t\\tstring calldata _uri)\\n\\texternal returns (bytes32 claimRequestId);\\n\\n\\t/**\\n     * @dev Removes a claim.\\n     *\\n     * Triggers Event: `ClaimRemoved`\\n     *\\n     * Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\\n     */\\n\\tfunction removeClaim(bytes32 _claimId) external returns (bool success);\\n\\n\\t/**\\n     * @dev Get a claim by its ID.\\n     *\\n     * Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\\n     */\\n\\tfunction getClaim(bytes32 _claimId)\\n\\texternal view returns(\\n\\t\\tuint256 topic,\\n\\t\\tuint256 scheme,\\n\\t\\taddress issuer,\\n\\t\\tbytes memory signature,\\n\\t\\tbytes memory data,\\n\\t\\tstring memory uri);\\n\\n\\t/**\\n     * @dev Returns an array of claim IDs by topic.\\n     */\\n\\tfunction getClaimIdsByTopic(uint256 _topic) external view returns(bytes32[] memory claimIds);\\n}\\n\\n// File: @onchain-id/solidity/contracts/interface/IIdentity.sol\\n\\n\\n// solhint-disable-next-line no-empty-blocks\\ninterface IIdentity is IERC734, IERC735 {}\\n\\n// File: @onchain-id/solidity/contracts/interface/IClaimIssuer.sol\\n\\ninterface IClaimIssuer is IIdentity {\\n\\n\\t/**\\n     * @dev Emitted when a claim is revoked.\\n     *\\n     * Specification: MUST be triggered when revoking a claim.\\n     */\\n\\tevent ClaimRevoked(bytes indexed signature);\\n\\n\\t/**\\n     * @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\\n     * @notice will fetch the claim from the identity contract (unsafe).\\n     * @param _claimId the id of the claim\\n     * @param _identity the address of the identity contract\\n     * @return isRevoked true when the claim is revoked\\n     */\\n\\tfunction revokeClaim(bytes32 _claimId, address _identity) external returns(bool);\\n\\n\\t/**\\n     * @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\\n     * @param signature the signature of the claim\\n     */\\n\\tfunction revokeClaimBySignature(bytes calldata signature) external;\\n\\n\\t/**\\n     * @dev Returns revocation status of a claim.\\n     * @param _sig the signature of the claim\\n     * @return isRevoked true if the claim is revoked and false otherwise\\n     */\\n\\tfunction isClaimRevoked(bytes calldata _sig) external view returns (bool);\\n\\n\\t/**\\n     * @dev Checks if a claim is valid.\\n     * @param _identity the identity contract related to the claim\\n     * @param claimTopic the claim topic of the claim\\n     * @param sig the signature of the claim\\n     * @param data the data field of the claim\\n     * @return claimValid true if the claim is valid, false otherwise\\n     */\\n\\tfunction isClaimValid(\\n\\t\\tIIdentity _identity,\\n\\t\\tuint256 claimTopic,\\n\\t\\tbytes calldata sig,\\n\\t\\tbytes calldata data)\\n\\texternal view returns (bool);\\n\\n\\t/**\\n     * @dev returns the address that signed the given data\\n     * @param sig the signature of the data\\n     * @param dataHash the data that was signed\\n     * returns the address that signed dataHash and created the signature sig\\n     */\\n\\tfunction getRecoveredAddress(bytes calldata sig, bytes32 dataHash) external pure returns (address);\\n}\\n\\n// File: contracts/registry/interface/ITrustedIssuersRegistry.sol\\n//\\n//                                             :+#####%%%%%%%%%%%%%%+\\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\\n//                                          +@@@@@. =@@@=  .+@@@@@*:\\n//                                          #@@@@#:%@@#. :*@@@@#-\\n//                                          @@@@@%@@@= :#@@@@+.\\n//                                         :@@@@@@@#.:#@@@%-\\n//                                         +@@@@@@-.*@@@*:\\n//                                         #@@@@#.=@@@+.\\n//                                         @@@@+-%@%=\\n//                                        :@@@#%@%=\\n//                                        +@@@@%-\\n//                                        :#%%=\\n//\\n\\n/**\\n *     NOTICE\\n *\\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\\n *     If you choose to receive it under the GPL v.3 license, the following applies:\\n *     T-REX is a suite of smart contracts developed by Tokeny to manage and transfer financial assets on the ethereum blockchain\\n *\\n *     Copyright (C) 2022, Tokeny s\\u00e0rl.\\n *\\n *     This program is free software: you can redistribute it and/or modify\\n *     it under the terms of the GNU General Public License as published by\\n *     the Free Software Foundation, either version 3 of the License, or\\n *     (at your option) any later version.\\n *\\n *     This program is distributed in the hope that it will be useful,\\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n *     GNU General Public License for more details.\\n *\\n *     You should have received a copy of the GNU General Public License\\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\ninterface ITrustedIssuersRegistry {\\n\\t/**\\n     *  this event is emitted when a trusted issuer is added in the registry.\\n     *  the event is emitted by the addTrustedIssuer function\\n     *  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract\\n     *  `claimTopics` is the set of claims that the trusted issuer is allowed to emit\\n     */\\n\\tevent TrustedIssuerAdded(IClaimIssuer indexed trustedIssuer, uint256[] claimTopics);\\n\\n\\t/**\\n     *  this event is emitted when a trusted issuer is removed from the registry.\\n     *  the event is emitted by the removeTrustedIssuer function\\n     *  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract\\n     */\\n\\tevent TrustedIssuerRemoved(IClaimIssuer indexed trustedIssuer);\\n\\n\\t/**\\n     *  this event is emitted when the set of claim topics is changed for a given trusted issuer.\\n     *  the event is emitted by the updateIssuerClaimTopics function\\n     *  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract\\n     *  `claimTopics` is the set of claims that the trusted issuer is allowed to emit\\n     */\\n\\tevent ClaimTopicsUpdated(IClaimIssuer indexed trustedIssuer, uint256[] claimTopics);\\n\\n\\t/**\\n     *  @dev registers a ClaimIssuer contract as trusted claim issuer.\\n     *  Requires that a ClaimIssuer contract doesn't already exist\\n     *  Requires that the claimTopics set is not empty\\n     *  Requires that there is no more than 15 claimTopics\\n     *  Requires that there is no more than 50 Trusted issuers\\n     *  @param _trustedIssuer The ClaimIssuer contract address of the trusted claim issuer.\\n     *  @param _claimTopics the set of claim topics that the trusted issuer is allowed to emit\\n     *  This function can only be called by the owner of the Trusted Issuers Registry contract\\n     *  emits a `TrustedIssuerAdded` event\\n     */\\n\\tfunction addTrustedIssuer(IClaimIssuer _trustedIssuer, uint256[] calldata _claimTopics) external;\\n\\n\\t/**\\n     *  @dev Removes the ClaimIssuer contract of a trusted claim issuer.\\n     *  Requires that the claim issuer contract to be registered first\\n     *  @param _trustedIssuer the claim issuer to remove.\\n     *  This function can only be called by the owner of the Trusted Issuers Registry contract\\n     *  emits a `TrustedIssuerRemoved` event\\n     */\\n\\tfunction removeTrustedIssuer(IClaimIssuer _trustedIssuer) external;\\n\\n\\t/**\\n     *  @dev Updates the set of claim topics that a trusted issuer is allowed to emit.\\n     *  Requires that this ClaimIssuer contract already exists in the registry\\n     *  Requires that the provided claimTopics set is not empty\\n     *  Requires that there is no more than 15 claimTopics\\n     *  @param _trustedIssuer the claim issuer to update.\\n     *  @param _claimTopics the set of claim topics that the trusted issuer is allowed to emit\\n     *  This function can only be called by the owner of the Trusted Issuers Registry contract\\n     *  emits a `ClaimTopicsUpdated` event\\n     */\\n\\tfunction updateIssuerClaimTopics(IClaimIssuer _trustedIssuer, uint256[] calldata _claimTopics) external;\\n\\n\\t/**\\n     *  @dev Function for getting all the trusted claim issuers stored.\\n     *  @return array of all claim issuers registered.\\n     */\\n\\tfunction getTrustedIssuers() external view returns (IClaimIssuer[] memory);\\n\\n\\t/**\\n     *  @dev Function for getting all the trusted issuer allowed for a given claim topic.\\n     *  @param claimTopic the claim topic to get the trusted issuers for.\\n     *  @return array of all claim issuer addresses that are allowed for the given claim topic.\\n     */\\n\\tfunction getTrustedIssuersForClaimTopic(uint256 claimTopic) external view returns (IClaimIssuer[] memory);\\n\\n\\t/**\\n     *  @dev Checks if the ClaimIssuer contract is trusted\\n     *  @param _issuer the address of the ClaimIssuer contract\\n     *  @return true if the issuer is trusted, false otherwise.\\n     */\\n\\tfunction isTrustedIssuer(address _issuer) external view returns (bool);\\n\\n\\t/**\\n     *  @dev Function for getting all the claim topic of trusted claim issuer\\n     *  Requires the provided ClaimIssuer contract to be registered in the trusted issuers registry.\\n     *  @param _trustedIssuer the trusted issuer concerned.\\n     *  @return The set of claim topics that the trusted issuer is allowed to emit\\n     */\\n\\tfunction getTrustedIssuerClaimTopics(IClaimIssuer _trustedIssuer) external view returns (uint256[] memory);\\n\\n\\t/**\\n     *  @dev Function for checking if the trusted claim issuer is allowed\\n     *  to emit a certain claim topic\\n     *  @param _issuer the address of the trusted issuer's ClaimIssuer contract\\n     *  @param _claimTopic the Claim Topic that has to be checked to know if the `issuer` is allowed to emit it\\n     *  @return true if the issuer is trusted for this claim topic.\\n     */\\n\\tfunction hasClaimTopic(address _issuer, uint256 _claimTopic) external view returns (bool);\\n}\\n\\n// File: contracts/registry/interface/IClaimTopicsRegistry.sol\\n//\\n//                                             :+#####%%%%%%%%%%%%%%+\\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\\n//                                          +@@@@@. =@@@=  .+@@@@@*:\\n//                                          #@@@@#:%@@#. :*@@@@#-\\n//                                          @@@@@%@@@= :#@@@@+.\\n//                                         :@@@@@@@#.:#@@@%-\\n//                                         +@@@@@@-.*@@@*:\\n//                                         #@@@@#.=@@@+.\\n//                                         @@@@+-%@%=\\n//                                        :@@@#%@%=\\n//                                        +@@@@%-\\n//                                        :#%%=\\n//\\n/**\\n *     NOTICE\\n *\\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\\n *     If you choose to receive it under the GPL v.3 license, the following applies:\\n *     T-REX is a suite of smart contracts developed by Tokeny to manage and transfer financial assets on the ethereum blockchain\\n *\\n *     Copyright (C) 2022, Tokeny s\\u00e0rl.\\n *\\n *     This program is free software: you can redistribute it and/or modify\\n *     it under the terms of the GNU General Public License as published by\\n *     the Free Software Foundation, either version 3 of the License, or\\n *     (at your option) any later version.\\n *\\n *     This program is distributed in the hope that it will be useful,\\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n *     GNU General Public License for more details.\\n *\\n *     You should have received a copy of the GNU General Public License\\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\ninterface IClaimTopicsRegistry {\\n\\t/**\\n     *  this event is emitted when a claim topic has been added to the ClaimTopicsRegistry\\n     *  the event is emitted by the 'addClaimTopic' function\\n     *  `claimTopic` is the required claim added to the Claim Topics Registry\\n     */\\n\\tevent ClaimTopicAdded(uint256 indexed claimTopic);\\n\\n\\t/**\\n     *  this event is emitted when a claim topic has been removed from the ClaimTopicsRegistry\\n     *  the event is emitted by the 'removeClaimTopic' function\\n     *  `claimTopic` is the required claim removed from the Claim Topics Registry\\n     */\\n\\tevent ClaimTopicRemoved(uint256 indexed claimTopic);\\n\\n\\t/**\\n     * @dev Add a trusted claim topic (For example: KYC=1, AML=2).\\n     * Only owner can call.\\n     * emits `ClaimTopicAdded` event\\n     * cannot add more than 15 topics for 1 token as adding more could create gas issues\\n     * @param _claimTopic The claim topic index\\n     */\\n\\tfunction addClaimTopic(uint256 _claimTopic) external;\\n\\n\\t/**\\n     *  @dev Remove a trusted claim topic (For example: KYC=1, AML=2).\\n     *  Only owner can call.\\n     *  emits `ClaimTopicRemoved` event\\n     *  @param _claimTopic The claim topic index\\n     */\\n\\tfunction removeClaimTopic(uint256 _claimTopic) external;\\n\\n\\t/**\\n     *  @dev Get the trusted claim topics for the security token\\n     *  @return Array of trusted claim topics\\n     */\\n\\tfunction getClaimTopics() external view returns (uint256[] memory);\\n}\\n\\n// File: contracts/registry/interface/IIdentityRegistryStorage.sol\\n//\\n//                                             :+#####%%%%%%%%%%%%%%+\\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\\n//                                          +@@@@@. =@@@=  .+@@@@@*:\\n//                                          #@@@@#:%@@#. :*@@@@#-\\n//                                          @@@@@%@@@= :#@@@@+.\\n//                                         :@@@@@@@#.:#@@@%-\\n//                                         +@@@@@@-.*@@@*:\\n//                                         #@@@@#.=@@@+.\\n//                                         @@@@+-%@%=\\n//                                        :@@@#%@%=\\n//                                        +@@@@%-\\n//                                        :#%%=\\n//\\n/**\\n *     NOTICE\\n *\\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\\n *     If you choose to receive it under the GPL v.3 license, the following applies:\\n *     T-REX is a suite of smart contracts developed by Tokeny to manage and transfer financial assets on the ethereum blockchain\\n *\\n *     Copyright (C) 2022, Tokeny s\\u00e0rl.\\n *\\n *     This program is free software: you can redistribute it and/or modify\\n *     it under the terms of the GNU General Public License as published by\\n *     the Free Software Foundation, either version 3 of the License, or\\n *     (at your option) any later version.\\n *\\n *     This program is distributed in the hope that it will be useful,\\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n *     GNU General Public License for more details.\\n *\\n *     You should have received a copy of the GNU General Public License\\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\ninterface IIdentityRegistryStorage {\\n\\n\\t/// events\\n\\n\\t/**\\n     *  this event is emitted when an Identity is registered into the storage contract.\\n     *  the event is emitted by the 'registerIdentity' function\\n     *  `investorAddress` is the address of the investor's wallet\\n     *  `identity` is the address of the Identity smart contract (onchainID)\\n     */\\n\\tevent IdentityStored(address indexed investorAddress, IIdentity indexed identity);\\n\\n\\t/**\\n     *  this event is emitted when an Identity is removed from the storage contract.\\n     *  the event is emitted by the 'deleteIdentity' function\\n     *  `investorAddress` is the address of the investor's wallet\\n     *  `identity` is the address of the Identity smart contract (onchainID)\\n     */\\n\\tevent IdentityUnstored(address indexed investorAddress, IIdentity indexed identity);\\n\\n\\t/**\\n     *  this event is emitted when an Identity has been updated\\n     *  the event is emitted by the 'updateIdentity' function\\n     *  `oldIdentity` is the old Identity contract's address to update\\n     *  `newIdentity` is the new Identity contract's\\n     */\\n\\tevent IdentityModified(IIdentity indexed oldIdentity, IIdentity indexed newIdentity);\\n\\n\\t/**\\n     *  this event is emitted when an Identity's country has been updated\\n     *  the event is emitted by the 'updateCountry' function\\n     *  `investorAddress` is the address on which the country has been updated\\n     *  `country` is the numeric code (ISO 3166-1) of the new country\\n     */\\n\\tevent CountryModified(address indexed investorAddress, uint16 indexed country);\\n\\n\\t/**\\n     *  this event is emitted when an Identity Registry is bound to the storage contract\\n     *  the event is emitted by the 'addIdentityRegistry' function\\n     *  `identityRegistry` is the address of the identity registry added\\n     */\\n\\tevent IdentityRegistryBound(address indexed identityRegistry);\\n\\n\\t/**\\n     *  this event is emitted when an Identity Registry is unbound from the storage contract\\n     *  the event is emitted by the 'removeIdentityRegistry' function\\n     *  `identityRegistry` is the address of the identity registry removed\\n     */\\n\\tevent IdentityRegistryUnbound(address indexed identityRegistry);\\n\\n\\t/// functions\\n\\n\\t/**\\n     *  @dev adds an identity contract corresponding to a user address in the storage.\\n     *  Requires that the user doesn't have an identity contract already registered.\\n     *  This function can only be called by an address set as agent of the smart contract\\n     *  @param _userAddress The address of the user\\n     *  @param _identity The address of the user's identity contract\\n     *  @param _country The country of the investor\\n     *  emits `IdentityStored` event\\n     */\\n\\tfunction addIdentityToStorage(\\n\\t\\taddress _userAddress,\\n\\t\\tIIdentity _identity,\\n\\t\\tuint16 _country\\n\\t) external;\\n\\n\\t/**\\n     *  @dev Removes an user from the storage.\\n     *  Requires that the user have an identity contract already deployed that will be deleted.\\n     *  This function can only be called by an address set as agent of the smart contract\\n     *  @param _userAddress The address of the user to be removed\\n     *  emits `IdentityUnstored` event\\n     */\\n\\tfunction removeIdentityFromStorage(address _userAddress) external;\\n\\n\\t/**\\n     *  @dev Updates the country corresponding to a user address.\\n     *  Requires that the user should have an identity contract already deployed that will be replaced.\\n     *  This function can only be called by an address set as agent of the smart contract\\n     *  @param _userAddress The address of the user\\n     *  @param _country The new country of the user\\n     *  emits `CountryModified` event\\n     */\\n\\tfunction modifyStoredInvestorCountry(address _userAddress, uint16 _country) external;\\n\\n\\t/**\\n     *  @dev Updates an identity contract corresponding to a user address.\\n     *  Requires that the user address should be the owner of the identity contract.\\n     *  Requires that the user should have an identity contract already deployed that will be replaced.\\n     *  This function can only be called by an address set as agent of the smart contract\\n     *  @param _userAddress The address of the user\\n     *  @param _identity The address of the user's new identity contract\\n     *  emits `IdentityModified` event\\n     */\\n\\tfunction modifyStoredIdentity(address _userAddress, IIdentity _identity) external;\\n\\n\\t/**\\n     *  @notice Adds an identity registry as agent of the Identity Registry Storage Contract.\\n     *  This function can only be called by the wallet set as owner of the smart contract\\n     *  This function adds the identity registry to the list of identityRegistries linked to the storage contract\\n     *  cannot bind more than 300 IR to 1 IRS\\n     *  @param _identityRegistry The identity registry address to add.\\n     */\\n\\tfunction bindIdentityRegistry(address _identityRegistry) external;\\n\\n\\t/**\\n     *  @notice Removes an identity registry from being agent of the Identity Registry Storage Contract.\\n     *  This function can only be called by the wallet set as owner of the smart contract\\n     *  This function removes the identity registry from the list of identityRegistries linked to the storage contract\\n     *  @param _identityRegistry The identity registry address to remove.\\n     */\\n\\tfunction unbindIdentityRegistry(address _identityRegistry) external;\\n\\n\\t/**\\n     *  @dev Returns the identity registries linked to the storage contract\\n     */\\n\\tfunction linkedIdentityRegistries() external view returns (address[] memory);\\n\\n\\t/**\\n     *  @dev Returns the onchainID of an investor.\\n     *  @param _userAddress The wallet of the investor\\n     */\\n\\tfunction storedIdentity(address _userAddress) external view returns (IIdentity);\\n\\n\\t/**\\n     *  @dev Returns the country code of an investor.\\n     *  @param _userAddress The wallet of the investor\\n     */\\n\\tfunction storedInvestorCountry(address _userAddress) external view returns (uint16);\\n}\\n\\n// File: contracts/registry/interface/IIdentityRegistry.sol\\n//\\n//                                             :+#####%%%%%%%%%%%%%%+\\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\\n//                                          +@@@@@. =@@@=  .+@@@@@*:\\n//                                          #@@@@#:%@@#. :*@@@@#-\\n//                                          @@@@@%@@@= :#@@@@+.\\n//                                         :@@@@@@@#.:#@@@%-\\n//                                         +@@@@@@-.*@@@*:\\n//                                         #@@@@#.=@@@+.\\n//                                         @@@@+-%@%=\\n//                                        :@@@#%@%=\\n//                                        +@@@@%-\\n//                                        :#%%=\\n//\\n/**\\n *     NOTICE\\n *\\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\\n *     If you choose to receive it under the GPL v.3 license, the following applies:\\n *     T-REX is a suite of smart contracts developed by Tokeny to manage and transfer financial assets on the ethereum blockchain\\n *\\n *     Copyright (C) 2022, Tokeny s\\u00e0rl.\\n *\\n *     This program is free software: you can redistribute it and/or modify\\n *     it under the terms of the GNU General Public License as published by\\n *     the Free Software Foundation, either version 3 of the License, or\\n *     (at your option) any later version.\\n *\\n *     This program is distributed in the hope that it will be useful,\\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n *     GNU General Public License for more details.\\n *\\n *     You should have received a copy of the GNU General Public License\\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n\\ninterface IIdentityRegistry {\\n\\t/**\\n     *  this event is emitted when the ClaimTopicsRegistry has been set for the IdentityRegistry\\n     *  the event is emitted by the IdentityRegistry constructor\\n     *  `claimTopicsRegistry` is the address of the Claim Topics Registry contract\\n     */\\n\\tevent ClaimTopicsRegistrySet(address indexed claimTopicsRegistry);\\n\\n\\t/**\\n     *  this event is emitted when the IdentityRegistryStorage has been set for the IdentityRegistry\\n     *  the event is emitted by the IdentityRegistry constructor\\n     *  `identityStorage` is the address of the Identity Registry Storage contract\\n     */\\n\\tevent IdentityStorageSet(address indexed identityStorage);\\n\\n\\t/**\\n     *  this event is emitted when the TrustedIssuersRegistry has been set for the IdentityRegistry\\n     *  the event is emitted by the IdentityRegistry constructor\\n     *  `trustedIssuersRegistry` is the address of the Trusted Issuers Registry contract\\n     */\\n\\tevent TrustedIssuersRegistrySet(address indexed trustedIssuersRegistry);\\n\\n\\t/**\\n     *  this event is emitted when an Identity is registered into the Identity Registry.\\n     *  the event is emitted by the 'registerIdentity' function\\n     *  `investorAddress` is the address of the investor's wallet\\n     *  `identity` is the address of the Identity smart contract (onchainID)\\n     */\\n\\tevent IdentityRegistered(address indexed investorAddress, IIdentity indexed identity);\\n\\n\\t/**\\n     *  this event is emitted when an Identity is removed from the Identity Registry.\\n     *  the event is emitted by the 'deleteIdentity' function\\n     *  `investorAddress` is the address of the investor's wallet\\n     *  `identity` is the address of the Identity smart contract (onchainID)\\n     */\\n\\tevent IdentityRemoved(address indexed investorAddress, IIdentity indexed identity);\\n\\n\\t/**\\n     *  this event is emitted when an Identity has been updated\\n     *  the event is emitted by the 'updateIdentity' function\\n     *  `oldIdentity` is the old Identity contract's address to update\\n     *  `newIdentity` is the new Identity contract's\\n     */\\n\\tevent IdentityUpdated(IIdentity indexed oldIdentity, IIdentity indexed newIdentity);\\n\\n\\t/**\\n     *  this event is emitted when an Identity's country has been updated\\n     *  the event is emitted by the 'updateCountry' function\\n     *  `investorAddress` is the address on which the country has been updated\\n     *  `country` is the numeric code (ISO 3166-1) of the new country\\n     */\\n\\tevent CountryUpdated(address indexed investorAddress, uint16 indexed country);\\n\\n\\t/**\\n     *  @dev Register an identity contract corresponding to a user address.\\n     *  Requires that the user doesn't have an identity contract already registered.\\n     *  This function can only be called by a wallet set as agent of the smart contract\\n     *  @param _userAddress The address of the user\\n     *  @param _identity The address of the user's identity contract\\n     *  @param _country The country of the investor\\n     *  emits `IdentityRegistered` event\\n     */\\n\\tfunction registerIdentity(\\n\\t\\taddress _userAddress,\\n\\t\\tIIdentity _identity,\\n\\t\\tuint16 _country\\n\\t) external;\\n\\n\\t/**\\n     *  @dev Removes an user from the identity registry.\\n     *  Requires that the user have an identity contract already deployed that will be deleted.\\n     *  This function can only be called by a wallet set as agent of the smart contract\\n     *  @param _userAddress The address of the user to be removed\\n     *  emits `IdentityRemoved` event\\n     */\\n\\tfunction deleteIdentity(address _userAddress) external;\\n\\n\\t/**\\n     *  @dev Replace the actual identityRegistryStorage contract with a new one.\\n     *  This function can only be called by the wallet set as owner of the smart contract\\n     *  @param _identityRegistryStorage The address of the new Identity Registry Storage\\n     *  emits `IdentityStorageSet` event\\n     */\\n\\tfunction setIdentityRegistryStorage(address _identityRegistryStorage) external;\\n\\n\\t/**\\n     *  @dev Replace the actual claimTopicsRegistry contract with a new one.\\n     *  This function can only be called by the wallet set as owner of the smart contract\\n     *  @param _claimTopicsRegistry The address of the new claim Topics Registry\\n     *  emits `ClaimTopicsRegistrySet` event\\n     */\\n\\tfunction setClaimTopicsRegistry(address _claimTopicsRegistry) external;\\n\\n\\t/**\\n     *  @dev Replace the actual trustedIssuersRegistry contract with a new one.\\n     *  This function can only be called by the wallet set as owner of the smart contract\\n     *  @param _trustedIssuersRegistry The address of the new Trusted Issuers Registry\\n     *  emits `TrustedIssuersRegistrySet` event\\n     */\\n\\tfunction setTrustedIssuersRegistry(address _trustedIssuersRegistry) external;\\n\\n\\t/**\\n     *  @dev Updates the country corresponding to a user address.\\n     *  Requires that the user should have an identity contract already deployed that will be replaced.\\n     *  This function can only be called by a wallet set as agent of the smart contract\\n     *  @param _userAddress The address of the user\\n     *  @param _country The new country of the user\\n     *  emits `CountryUpdated` event\\n     */\\n\\tfunction updateCountry(address _userAddress, uint16 _country) external;\\n\\n\\t/**\\n     *  @dev Updates an identity contract corresponding to a user address.\\n     *  Requires that the user address should be the owner of the identity contract.\\n     *  Requires that the user should have an identity contract already deployed that will be replaced.\\n     *  This function can only be called by a wallet set as agent of the smart contract\\n     *  @param _userAddress The address of the user\\n     *  @param _identity The address of the user's new identity contract\\n     *  emits `IdentityUpdated` event\\n     */\\n\\tfunction updateIdentity(address _userAddress, IIdentity _identity) external;\\n\\n\\t/**\\n     *  @dev function allowing to register identities in batch\\n     *  This function can only be called by a wallet set as agent of the smart contract\\n     *  Requires that none of the users has an identity contract already registered.\\n     *  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,\\n     *  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \\\"OUT OF GAS\\\" TRANSACTION\\n     *  @param _userAddresses The addresses of the users\\n     *  @param _identities The addresses of the corresponding identity contracts\\n     *  @param _countries The countries of the corresponding investors\\n     *  emits _userAddresses.length `IdentityRegistered` events\\n     */\\n\\tfunction batchRegisterIdentity(\\n\\t\\taddress[] calldata _userAddresses,\\n\\t\\tIIdentity[] calldata _identities,\\n\\t\\tuint16[] calldata _countries\\n\\t) external;\\n\\n\\t/**\\n     *  @dev This functions checks whether a wallet has its Identity registered or not\\n     *  in the Identity Registry.\\n     *  @param _userAddress The address of the user to be checked.\\n     *  @return 'True' if the address is contained in the Identity Registry, 'false' if not.\\n     */\\n\\tfunction contains(address _userAddress) external view returns (bool);\\n\\n\\t/**\\n     *  @dev This functions checks whether an identity contract\\n     *  corresponding to the provided user address has the required claims or not based\\n     *  on the data fetched from trusted issuers registry and from the claim topics registry\\n     *  @param _userAddress The address of the user to be verified.\\n     *  @return 'True' if the address is verified, 'false' if not.\\n     */\\n\\tfunction isVerified(address _userAddress) external view returns (bool);\\n\\n\\t/**\\n     *  @dev Returns the onchainID of an investor.\\n     *  @param _userAddress The wallet of the investor\\n     */\\n\\tfunction identity(address _userAddress) external view returns (IIdentity);\\n\\n\\t/**\\n     *  @dev Returns the country code of an investor.\\n     *  @param _userAddress The wallet of the investor\\n     */\\n\\tfunction investorCountry(address _userAddress) external view returns (uint16);\\n\\n\\t/**\\n     *  @dev Returns the IdentityRegistryStorage linked to the current IdentityRegistry.\\n     */\\n\\tfunction identityStorage() external view returns (IIdentityRegistryStorage);\\n\\n\\t/**\\n     *  @dev Returns the TrustedIssuersRegistry linked to the current IdentityRegistry.\\n     */\\n\\tfunction issuersRegistry() external view returns (ITrustedIssuersRegistry);\\n\\n\\t/**\\n     *  @dev Returns the ClaimTopicsRegistry linked to the current IdentityRegistry.\\n     */\\n\\tfunction topicsRegistry() external view returns (IClaimTopicsRegistry);\\n}\\n\\n// File: contracts/compliance/modular/IModularCompliance.sol\\n//\\n//                                             :+#####%%%%%%%%%%%%%%+\\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\\n//                                          +@@@@@. =@@@=  .+@@@@@*:\\n//                                          #@@@@#:%@@#. :*@@@@#-\\n//                                          @@@@@%@@@= :#@@@@+.\\n//                                         :@@@@@@@#.:#@@@%-\\n//                                         +@@@@@@-.*@@@*:\\n//                                         #@@@@#.=@@@+.\\n//                                         @@@@+-%@%=\\n//                                        :@@@#%@%=\\n//                                        +@@@@%-\\n//                                        :#%%=\\n//\\n/**\\n *     NOTICE\\n *\\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\\n *     If you choose to receive it under the GPL v.3 license, the following applies:\\n *     T-REX is a suite of smart contracts developed by Tokeny to manage and transfer financial assets on the ethereum blockchain\\n *\\n *     Copyright (C) 2022, Tokeny s\\u00e0rl.\\n *\\n *     This program is free software: you can redistribute it and/or modify\\n *     it under the terms of the GNU General Public License as published by\\n *     the Free Software Foundation, either version 3 of the License, or\\n *     (at your option) any later version.\\n *\\n *     This program is distributed in the hope that it will be useful,\\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n *     GNU General Public License for more details.\\n *\\n *     You should have received a copy of the GNU General Public License\\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n\\ninterface IModularCompliance {\\n\\n\\t/// events\\n\\n\\t/**\\n     *  @dev Event emitted for each executed interaction with a module contract.\\n     *  For gas efficiency, only the interaction calldata selector (first 4\\n     *  bytes) is included in the event. For interactions without calldata or\\n     *  whose calldata is shorter than 4 bytes, the selector will be `0`.\\n     */\\n\\tevent ModuleInteraction(address indexed target, bytes4 selector);\\n\\n\\t/**\\n     *  this event is emitted when a token has been bound to the compliance contract\\n     *  the event is emitted by the bindToken function\\n     *  `_token` is the address of the token to bind\\n     */\\n\\tevent TokenBound(address _token);\\n\\n\\t/**\\n     *  this event is emitted when a token has been unbound from the compliance contract\\n     *  the event is emitted by the unbindToken function\\n     *  `_token` is the address of the token to unbind\\n     */\\n\\tevent TokenUnbound(address _token);\\n\\n\\t/**\\n     *  this event is emitted when a module has been added to the list of modules bound to the compliance contract\\n     *  the event is emitted by the addModule function\\n     *  `_module` is the address of the compliance module\\n     */\\n\\tevent ModuleAdded(address indexed _module);\\n\\n\\t/**\\n     *  this event is emitted when a module has been removed from the list of modules bound to the compliance contract\\n     *  the event is emitted by the removeModule function\\n     *  `_module` is the address of the compliance module\\n     */\\n\\tevent ModuleRemoved(address indexed _module);\\n\\n\\t/// functions\\n\\n\\t/**\\n     *  @dev binds a token to the compliance contract\\n     *  @param _token address of the token to bind\\n     *  This function can be called ONLY by the owner of the compliance contract\\n     *  Emits a TokenBound event\\n     */\\n\\tfunction bindToken(address _token) external;\\n\\n\\t/**\\n     *  @dev unbinds a token from the compliance contract\\n     *  @param _token address of the token to unbind\\n     *  This function can be called ONLY by the owner of the compliance contract\\n     *  Emits a TokenUnbound event\\n     */\\n\\tfunction unbindToken(address _token) external;\\n\\n\\t/**\\n     *  @dev adds a module to the list of compliance modules\\n     *  @param _module address of the module to add\\n     *  there cannot be more than 25 modules bound to the modular compliance for gas cost reasons\\n     *  This function can be called ONLY by the owner of the compliance contract\\n     *  Emits a ModuleAdded event\\n     */\\n\\tfunction addModule(address _module) external;\\n\\n\\t/**\\n     *  @dev removes a module from the list of compliance modules\\n     *  @param _module address of the module to remove\\n     *  This function can be called ONLY by the owner of the compliance contract\\n     *  Emits a ModuleRemoved event\\n     */\\n\\tfunction removeModule(address _module) external;\\n\\n\\t/**\\n     *  @dev calls any function on bound modules\\n     *  can be called only on bound modules\\n     *  @param callData the bytecode for interaction with the module, abi encoded\\n     *  @param _module The address of the module\\n     *  This function can be called only by the modular compliance owner\\n     *  emits a `ModuleInteraction` event\\n     */\\n\\tfunction callModuleFunction(bytes calldata callData, address _module) external;\\n\\n\\t/**\\n     *  @dev function called whenever tokens are transferred\\n     *  from one wallet to another\\n     *  this function can update state variables in the modules bound to the compliance\\n     *  these state variables being used by the module checks to decide if a transfer\\n     *  is compliant or not depending on the values stored in these state variables and on\\n     *  the parameters of the modules\\n     *  This function can be called ONLY by the token contract bound to the compliance\\n     *  @param _from The address of the sender\\n     *  @param _to The address of the receiver\\n     *  @param _amount The amount of tokens involved in the transfer\\n     *  This function calls moduleTransferAction() on each module bound to the compliance contract\\n     */\\n\\tfunction transferred(\\n\\t\\taddress _from,\\n\\t\\taddress _to,\\n\\t\\tuint256 _amount\\n\\t) external;\\n\\n\\t/**\\n     *  @dev function called whenever tokens are created on a wallet\\n     *  this function can update state variables in the modules bound to the compliance\\n     *  these state variables being used by the module checks to decide if a transfer\\n     *  is compliant or not depending on the values stored in these state variables and on\\n     *  the parameters of the modules\\n     *  This function can be called ONLY by the token contract bound to the compliance\\n     *  @param _to The address of the receiver\\n     *  @param _amount The amount of tokens involved in the minting\\n     *  This function calls moduleMintAction() on each module bound to the compliance contract\\n     */\\n\\tfunction created(address _to, uint256 _amount) external;\\n\\n\\t/**\\n     *  @dev function called whenever tokens are destroyed from a wallet\\n     *  this function can update state variables in the modules bound to the compliance\\n     *  these state variables being used by the module checks to decide if a transfer\\n     *  is compliant or not depending on the values stored in these state variables and on\\n     *  the parameters of the modules\\n     *  This function can be called ONLY by the token contract bound to the compliance\\n     *  @param _from The address on which tokens are burnt\\n     *  @param _amount The amount of tokens involved in the burn\\n     *  This function calls moduleBurnAction() on each module bound to the compliance contract\\n     */\\n\\tfunction destroyed(address _from, uint256 _amount) external;\\n\\n\\t/**\\n     *  @dev checks that the transfer is compliant.\\n     *  default compliance always returns true\\n     *  READ ONLY FUNCTION, this function cannot be used to increment\\n     *  counters, emit events, ...\\n     *  @param _from The address of the sender\\n     *  @param _to The address of the receiver\\n     *  @param _amount The amount of tokens involved in the transfer\\n     *  This function will call moduleCheck() on every module bound to the compliance\\n     *  If each of the module checks return TRUE, this function will return TRUE as well\\n     *  returns FALSE otherwise\\n     */\\n\\tfunction canTransfer(\\n\\t\\taddress _from,\\n\\t\\taddress _to,\\n\\t\\tuint256 _amount\\n\\t) external view returns (bool);\\n\\n\\t/**\\n     *  @dev getter for the modules bound to the compliance contract\\n     *  returns address array of module contracts bound to the compliance\\n     */\\n\\tfunction getModules() external view returns (address[] memory);\\n\\n\\t/**\\n     *  @dev getter for the address of the token bound\\n     *  returns the address of the token\\n     */\\n\\tfunction getTokenBound() external view returns (address);\\n\\n\\t/**\\n     *  @dev checks if a module is bound to the compliance contract\\n     *  returns true if module is bound, false otherwise\\n     */\\n\\tfunction isModuleBound(address _module) external view returns (bool);\\n}\\n\\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n\\t/**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n\\tevent Transfer(address indexed from, address indexed to, uint256 value);\\n\\n\\t/**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n\\tevent Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n\\t/**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n\\tfunction totalSupply() external view returns (uint256);\\n\\n\\t/**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n\\tfunction balanceOf(address account) external view returns (uint256);\\n\\n\\t/**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n\\tfunction transfer(address to, uint256 amount) external returns (bool);\\n\\n\\t/**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n\\tfunction allowance(address owner, address spender) external view returns (uint256);\\n\\n\\t/**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n\\tfunction approve(address spender, uint256 amount) external returns (bool);\\n\\n\\t/**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n\\tfunction transferFrom(\\n\\t\\taddress from,\\n\\t\\taddress to,\\n\\t\\tuint256 amount\\n\\t) external returns (bool);\\n}\\n\\n// File: contracts/token/IToken.sol\\n//\\n//                                             :+#####%%%%%%%%%%%%%%+\\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\\n//                                          +@@@@@. =@@@=  .+@@@@@*:\\n//                                          #@@@@#:%@@#. :*@@@@#-\\n//                                          @@@@@%@@@= :#@@@@+.\\n//                                         :@@@@@@@#.:#@@@%-\\n//                                         +@@@@@@-.*@@@*:\\n//                                         #@@@@#.=@@@+.\\n//                                         @@@@+-%@%=\\n//                                        :@@@#%@%=\\n//                                        +@@@@%-\\n//                                        :#%%=\\n//\\n\\n/**\\n *     NOTICE\\n *\\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\\n *     If you choose to receive it under the GPL v.3 license, the following applies:\\n *     T-REX is a suite of smart contracts developed by Tokeny to manage and transfer financial assets on the ethereum blockchain\\n *\\n *     Copyright (C) 2022, Tokeny s\\u00e0rl.\\n *\\n *     This program is free software: you can redistribute it and/or modify\\n *     it under the terms of the GNU General Public License as published by\\n *     the Free Software Foundation, either version 3 of the License, or\\n *     (at your option) any later version.\\n *\\n *     This program is distributed in the hope that it will be useful,\\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n *     GNU General Public License for more details.\\n *\\n *     You should have received a copy of the GNU General Public License\\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n\\n/// @dev interface\\ninterface IToken is IERC20 {\\n\\n\\t/// events\\n\\n\\t/**\\n     *  this event is emitted when the token information is updated.\\n     *  the event is emitted by the token init function and by the setTokenInformation function\\n     *  `_newName` is the name of the token\\n     *  `_newSymbol` is the symbol of the token\\n     *  `_newDecimals` is the decimals of the token\\n     *  `_newVersion` is the version of the token, current version is 3.0\\n     *  `_newOnchainID` is the address of the onchainID of the token\\n     */\\n\\tevent UpdatedTokenInformation(string indexed _newName, string indexed _newSymbol, uint8 _newDecimals, string\\n\\t_newVersion, address indexed _newOnchainID);\\n\\n\\t/**\\n     *  this event is emitted when the IdentityRegistry has been set for the token\\n     *  the event is emitted by the token constructor and by the setIdentityRegistry function\\n     *  `_identityRegistry` is the address of the Identity Registry of the token\\n     */\\n\\tevent IdentityRegistryAdded(address indexed _identityRegistry);\\n\\n\\t/**\\n     *  this event is emitted when the Compliance has been set for the token\\n     *  the event is emitted by the token constructor and by the setCompliance function\\n     *  `_compliance` is the address of the Compliance contract of the token\\n     */\\n\\tevent ComplianceAdded(address indexed _compliance);\\n\\n\\t/**\\n     *  this event is emitted when an investor successfully recovers his tokens\\n     *  the event is emitted by the recoveryAddress function\\n     *  `_lostWallet` is the address of the wallet that the investor lost access to\\n     *  `_newWallet` is the address of the wallet that the investor provided for the recovery\\n     *  `_investorOnchainID` is the address of the onchainID of the investor who asked for a recovery\\n     */\\n\\tevent RecoverySuccess(address indexed _lostWallet, address indexed _newWallet, address indexed _investorOnchainID);\\n\\n\\t/**\\n     *  this event is emitted when the wallet of an investor is frozen or unfrozen\\n     *  the event is emitted by setAddressFrozen and batchSetAddressFrozen functions\\n     *  `_userAddress` is the wallet of the investor that is concerned by the freezing status\\n     *  `_isFrozen` is the freezing status of the wallet\\n     *  if `_isFrozen` equals `true` the wallet is frozen after emission of the event\\n     *  if `_isFrozen` equals `false` the wallet is unfrozen after emission of the event\\n     *  `_owner` is the address of the agent who called the function to freeze the wallet\\n     */\\n\\tevent AddressFrozen(address indexed _userAddress, bool indexed _isFrozen, address indexed _owner);\\n\\n\\t/**\\n     *  this event is emitted when a certain amount of tokens is frozen on a wallet\\n     *  the event is emitted by freezePartialTokens and batchFreezePartialTokens functions\\n     *  `_userAddress` is the wallet of the investor that is concerned by the freezing status\\n     *  `_amount` is the amount of tokens that are frozen\\n     */\\n\\tevent TokensFrozen(address indexed _userAddress, uint256 _amount);\\n\\n\\t/**\\n     *  this event is emitted when a certain amount of tokens is unfrozen on a wallet\\n     *  the event is emitted by unfreezePartialTokens and batchUnfreezePartialTokens functions\\n     *  `_userAddress` is the wallet of the investor that is concerned by the freezing status\\n     *  `_amount` is the amount of tokens that are unfrozen\\n     */\\n\\tevent TokensUnfrozen(address indexed _userAddress, uint256 _amount);\\n\\n\\t/**\\n     *  this event is emitted when the token is paused\\n     *  the event is emitted by the pause function\\n     *  `_userAddress` is the address of the wallet that called the pause function\\n     */\\n\\tevent Paused(address _userAddress);\\n\\n\\t/**\\n     *  this event is emitted when the token is unpaused\\n     *  the event is emitted by the unpause function\\n     *  `_userAddress` is the address of the wallet that called the unpause function\\n     */\\n\\tevent Unpaused(address _userAddress);\\n\\n\\t/// functions\\n\\n\\t/**\\n     *  @dev sets the token name\\n     *  @param _name the name of token to set\\n     *  Only the owner of the token smart contract can call this function\\n     *  emits a `UpdatedTokenInformation` event\\n     */\\n\\tfunction setName(string calldata _name) external;\\n\\n\\t/**\\n     *  @dev sets the token symbol\\n     *  @param _symbol the token symbol to set\\n     *  Only the owner of the token smart contract can call this function\\n     *  emits a `UpdatedTokenInformation` event\\n     */\\n\\tfunction setSymbol(string calldata _symbol) external;\\n\\n\\t/**\\n     *  @dev sets the onchain ID of the token\\n     *  @param _onchainID the address of the onchain ID to set\\n     *  Only the owner of the token smart contract can call this function\\n     *  emits a `UpdatedTokenInformation` event\\n     */\\n\\tfunction setOnchainID(address _onchainID) external;\\n\\n\\t/**\\n     *  @dev pauses the token contract, when contract is paused investors cannot transfer tokens anymore\\n     *  This function can only be called by a wallet set as agent of the token\\n     *  emits a `Paused` event\\n     */\\n\\tfunction pause() external;\\n\\n\\t/**\\n     *  @dev unpauses the token contract, when contract is unpaused investors can transfer tokens\\n     *  if their wallet is not blocked & if the amount to transfer is <= to the amount of free tokens\\n     *  This function can only be called by a wallet set as agent of the token\\n     *  emits an `Unpaused` event\\n     */\\n\\tfunction unpause() external;\\n\\n\\t/**\\n     *  @dev sets an address frozen status for this token.\\n     *  @param _userAddress The address for which to update frozen status\\n     *  @param _freeze Frozen status of the address\\n     *  This function can only be called by a wallet set as agent of the token\\n     *  emits an `AddressFrozen` event\\n     */\\n\\tfunction setAddressFrozen(address _userAddress, bool _freeze) external;\\n\\n\\t/**\\n     *  @dev freezes token amount specified for given address.\\n     *  @param _userAddress The address for which to update frozen tokens\\n     *  @param _amount Amount of Tokens to be frozen\\n     *  This function can only be called by a wallet set as agent of the token\\n     *  emits a `TokensFrozen` event\\n     */\\n\\tfunction freezePartialTokens(address _userAddress, uint256 _amount) external;\\n\\n\\t/**\\n     *  @dev unfreezes token amount specified for given address\\n     *  @param _userAddress The address for which to update frozen tokens\\n     *  @param _amount Amount of Tokens to be unfrozen\\n     *  This function can only be called by a wallet set as agent of the token\\n     *  emits a `TokensUnfrozen` event\\n     */\\n\\tfunction unfreezePartialTokens(address _userAddress, uint256 _amount) external;\\n\\n\\t/**\\n     *  @dev sets the Identity Registry for the token\\n     *  @param _identityRegistry the address of the Identity Registry to set\\n     *  Only the owner of the token smart contract can call this function\\n     *  emits an `IdentityRegistryAdded` event\\n     */\\n\\tfunction setIdentityRegistry(address _identityRegistry) external;\\n\\n\\t/**\\n     *  @dev sets the compliance contract of the token\\n     *  @param _compliance the address of the compliance contract to set\\n     *  Only the owner of the token smart contract can call this function\\n     *  calls bindToken on the compliance contract\\n     *  emits a `ComplianceAdded` event\\n     */\\n\\tfunction setCompliance(address _compliance) external;\\n\\n\\t/**\\n     *  @dev force a transfer of tokens between 2 whitelisted wallets\\n     *  In case the `from` address has not enough free tokens (unfrozen tokens)\\n     *  but has a total balance higher or equal to the `amount`\\n     *  the amount of frozen tokens is reduced in order to have enough free tokens\\n     *  to proceed the transfer, in such a case, the remaining balance on the `from`\\n     *  account is 100% composed of frozen tokens post-transfer.\\n     *  Require that the `to` address is a verified address,\\n     *  @param _from The address of the sender\\n     *  @param _to The address of the receiver\\n     *  @param _amount The number of tokens to transfer\\n     *  @return `true` if successful and revert if unsuccessful\\n     *  This function can only be called by a wallet set as agent of the token\\n     *  emits a `TokensUnfrozen` event if `_amount` is higher than the free balance of `_from`\\n     *  emits a `Transfer` event\\n     */\\n\\tfunction forcedTransfer(\\n\\t\\taddress _from,\\n\\t\\taddress _to,\\n\\t\\tuint256 _amount\\n\\t) external returns (bool);\\n\\n\\t/**\\n     *  @dev mint tokens on a wallet\\n     *  Improved version of default mint method. Tokens can be minted\\n     *  to an address if only it is a verified address as per the security token.\\n     *  @param _to Address to mint the tokens to.\\n     *  @param _amount Amount of tokens to mint.\\n     *  This function can only be called by a wallet set as agent of the token\\n     *  emits a `Transfer` event\\n     */\\n\\tfunction mint(address _to, uint256 _amount) external;\\n\\n\\t/**\\n     *  @dev burn tokens on a wallet\\n     *  In case the `account` address has not enough free tokens (unfrozen tokens)\\n     *  but has a total balance higher or equal to the `value` amount\\n     *  the amount of frozen tokens is reduced in order to have enough free tokens\\n     *  to proceed the burn, in such a case, the remaining balance on the `account`\\n     *  is 100% composed of frozen tokens post-transaction.\\n     *  @param _userAddress Address to burn the tokens from.\\n     *  @param _amount Amount of tokens to burn.\\n     *  This function can only be called by a wallet set as agent of the token\\n     *  emits a `TokensUnfrozen` event if `_amount` is higher than the free balance of `_userAddress`\\n     *  emits a `Transfer` event\\n     */\\n\\tfunction burn(address _userAddress, uint256 _amount) external;\\n\\n\\t/**\\n     *  @dev recovery function used to force transfer tokens from a\\n     *  lost wallet to a new wallet for an investor.\\n     *  @param _lostWallet the wallet that the investor lost\\n     *  @param _newWallet the newly provided wallet on which tokens have to be transferred\\n     *  @param _investorOnchainID the onchainID of the investor asking for a recovery\\n     *  This function can only be called by a wallet set as agent of the token\\n     *  emits a `TokensUnfrozen` event if there is some frozen tokens on the lost wallet if the recovery process is successful\\n     *  emits a `Transfer` event if the recovery process is successful\\n     *  emits a `RecoverySuccess` event if the recovery process is successful\\n     *  emits a `RecoveryFails` event if the recovery process fails\\n     */\\n\\tfunction recoveryAddress(\\n\\t\\taddress _lostWallet,\\n\\t\\taddress _newWallet,\\n\\t\\taddress _investorOnchainID\\n\\t) external returns (bool);\\n\\n\\t/**\\n     *  @dev function allowing to issue transfers in batch\\n     *  Require that the msg.sender and `to` addresses are not frozen.\\n     *  Require that the total value should not exceed available balance.\\n     *  Require that the `to` addresses are all verified addresses,\\n     *  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_toList.length` IS TOO HIGH,\\n     *  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \\\"OUT OF GAS\\\" TRANSACTION\\n     *  @param _toList The addresses of the receivers\\n     *  @param _amounts The number of tokens to transfer to the corresponding receiver\\n     *  emits _toList.length `Transfer` events\\n     */\\n\\tfunction batchTransfer(address[] calldata _toList, uint256[] calldata _amounts) external;\\n\\n\\t/**\\n     *  @dev function allowing to issue forced transfers in batch\\n     *  Require that `_amounts[i]` should not exceed available balance of `_fromList[i]`.\\n     *  Require that the `_toList` addresses are all verified addresses\\n     *  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_fromList.length` IS TOO HIGH,\\n     *  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \\\"OUT OF GAS\\\" TRANSACTION\\n     *  @param _fromList The addresses of the senders\\n     *  @param _toList The addresses of the receivers\\n     *  @param _amounts The number of tokens to transfer to the corresponding receiver\\n     *  This function can only be called by a wallet set as agent of the token\\n     *  emits `TokensUnfrozen` events if `_amounts[i]` is higher than the free balance of `_fromList[i]`\\n     *  emits _fromList.length `Transfer` events\\n     */\\n\\tfunction batchForcedTransfer(\\n\\t\\taddress[] calldata _fromList,\\n\\t\\taddress[] calldata _toList,\\n\\t\\tuint256[] calldata _amounts\\n\\t) external;\\n\\n\\t/**\\n     *  @dev function allowing to mint tokens in batch\\n     *  Require that the `_toList` addresses are all verified addresses\\n     *  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_toList.length` IS TOO HIGH,\\n     *  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \\\"OUT OF GAS\\\" TRANSACTION\\n     *  @param _toList The addresses of the receivers\\n     *  @param _amounts The number of tokens to mint to the corresponding receiver\\n     *  This function can only be called by a wallet set as agent of the token\\n     *  emits _toList.length `Transfer` events\\n     */\\n\\tfunction batchMint(address[] calldata _toList, uint256[] calldata _amounts) external;\\n\\n\\t/**\\n     *  @dev function allowing to burn tokens in batch\\n     *  Require that the `_userAddresses` addresses are all verified addresses\\n     *  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,\\n     *  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \\\"OUT OF GAS\\\" TRANSACTION\\n     *  @param _userAddresses The addresses of the wallets concerned by the burn\\n     *  @param _amounts The number of tokens to burn from the corresponding wallets\\n     *  This function can only be called by a wallet set as agent of the token\\n     *  emits _userAddresses.length `Transfer` events\\n     */\\n\\tfunction batchBurn(address[] calldata _userAddresses, uint256[] calldata _amounts) external;\\n\\n\\t/**\\n     *  @dev function allowing to set frozen addresses in batch\\n     *  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,\\n     *  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \\\"OUT OF GAS\\\" TRANSACTION\\n     *  @param _userAddresses The addresses for which to update frozen status\\n     *  @param _freeze Frozen status of the corresponding address\\n     *  This function can only be called by a wallet set as agent of the token\\n     *  emits _userAddresses.length `AddressFrozen` events\\n     */\\n\\tfunction batchSetAddressFrozen(address[] calldata _userAddresses, bool[] calldata _freeze) external;\\n\\n\\t/**\\n     *  @dev function allowing to freeze tokens partially in batch\\n     *  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,\\n     *  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \\\"OUT OF GAS\\\" TRANSACTION\\n     *  @param _userAddresses The addresses on which tokens need to be frozen\\n     *  @param _amounts the amount of tokens to freeze on the corresponding address\\n     *  This function can only be called by a wallet set as agent of the token\\n     *  emits _userAddresses.length `TokensFrozen` events\\n     */\\n\\tfunction batchFreezePartialTokens(address[] calldata _userAddresses, uint256[] calldata _amounts) external;\\n\\n\\t/**\\n     *  @dev function allowing to unfreeze tokens partially in batch\\n     *  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,\\n     *  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \\\"OUT OF GAS\\\" TRANSACTION\\n     *  @param _userAddresses The addresses on which tokens need to be unfrozen\\n     *  @param _amounts the amount of tokens to unfreeze on the corresponding address\\n     *  This function can only be called by a wallet set as agent of the token\\n     *  emits _userAddresses.length `TokensUnfrozen` events\\n     */\\n\\tfunction batchUnfreezePartialTokens(address[] calldata _userAddresses, uint256[] calldata _amounts) external;\\n\\n\\t/**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5,05` (`505 / 1 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * balanceOf() and transfer().\\n     */\\n\\tfunction decimals() external view returns (uint8);\\n\\n\\t/**\\n     * @dev Returns the name of the token.\\n     */\\n\\tfunction name() external view returns (string memory);\\n\\n\\t/**\\n     * @dev Returns the address of the onchainID of the token.\\n     * the onchainID of the token gives all the information available\\n     * about the token and is managed by the token issuer or his agent.\\n     */\\n\\tfunction onchainID() external view returns (address);\\n\\n\\t/**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n\\tfunction symbol() external view returns (string memory);\\n\\n\\t/**\\n     * @dev Returns the TREX version of the token.\\n     * current version is 3.0.0\\n     */\\n\\tfunction version() external view returns (string memory);\\n\\n\\t/**\\n     *  @dev Returns the Identity Registry linked to the token\\n     */\\n\\tfunction identityRegistry() external view returns (IIdentityRegistry);\\n\\n\\t/**\\n     *  @dev Returns the Compliance contract linked to the token\\n     */\\n\\tfunction compliance() external view returns (IModularCompliance);\\n\\n\\t/**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n\\tfunction paused() external view returns (bool);\\n\\n\\t/**\\n     *  @dev Returns the freezing status of a wallet\\n     *  if isFrozen returns `true` the wallet is frozen\\n     *  if isFrozen returns `false` the wallet is not frozen\\n     *  isFrozen returning `true` doesn't mean that the balance is free, tokens could be blocked by\\n     *  a partial freeze or the whole token could be blocked by pause\\n     *  @param _userAddress the address of the wallet on which isFrozen is called\\n     */\\n\\tfunction isFrozen(address _userAddress) external view returns (bool);\\n\\n\\t/**\\n     *  @dev Returns the amount of tokens that are partially frozen on a wallet\\n     *  the amount of frozen tokens is always <= to the total balance of the wallet\\n     *  @param _userAddress the address of the wallet on which getFrozenTokens is called\\n     */\\n\\tfunction getFrozenTokens(address _userAddress) external view returns (uint256);\\n}\\n\\n// File: contracts/proxy/authority/ITREXImplementationAuthority.sol\\n//\\n//                                             :+#####%%%%%%%%%%%%%%+\\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\\n//                                          +@@@@@. =@@@=  .+@@@@@*:\\n//                                          #@@@@#:%@@#. :*@@@@#-\\n//                                          @@@@@%@@@= :#@@@@+.\\n//                                         :@@@@@@@#.:#@@@%-\\n//                                         +@@@@@@-.*@@@*:\\n//                                         #@@@@#.=@@@+.\\n//                                         @@@@+-%@%=\\n//                                        :@@@#%@%=\\n//                                        +@@@@%-\\n//                                        :#%%=\\n//\\n/**\\n *     NOTICE\\n *\\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\\n *     If you choose to receive it under the GPL v.3 license, the following applies:\\n *     T-REX is a suite of smart contracts developed by Tokeny to manage and transfer financial assets on the ethereum blockchain\\n *\\n *     Copyright (C) 2022, Tokeny s\\u00e0rl.\\n *\\n *     This program is free software: you can redistribute it and/or modify\\n *     it under the terms of the GNU General Public License as published by\\n *     the Free Software Foundation, either version 3 of the License, or\\n *     (at your option) any later version.\\n *\\n *     This program is distributed in the hope that it will be useful,\\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n *     GNU General Public License for more details.\\n *\\n *     You should have received a copy of the GNU General Public License\\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\ninterface ITREXImplementationAuthority {\\n\\n\\t/// types\\n\\n\\tstruct TREXContracts {\\n\\t\\t// address of token implementation contract\\n\\t\\taddress tokenImplementation;\\n\\t\\t// address of ClaimTopicsRegistry implementation contract\\n\\t\\taddress ctrImplementation;\\n\\t\\t// address of IdentityRegistry implementation contract\\n\\t\\taddress irImplementation;\\n\\t\\t// address of IdentityRegistryStorage implementation contract\\n\\t\\taddress irsImplementation;\\n\\t\\t// address of TrustedIssuersRegistry implementation contract\\n\\t\\taddress tirImplementation;\\n\\t\\t// address of ModularCompliance implementation contract\\n\\t\\taddress mcImplementation;\\n\\t}\\n\\n\\tstruct Version {\\n\\t\\t// major version\\n\\t\\tuint8 major;\\n\\t\\t// minor version\\n\\t\\tuint8 minor;\\n\\t\\t// patch version\\n\\t\\tuint8 patch;\\n\\t}\\n\\n\\t/// events\\n\\n\\t/// event emitted when a new TREX version is added to the contract memory\\n\\tevent TREXVersionAdded(Version indexed version, TREXContracts indexed trex);\\n\\n\\t/// event emitted when a new TREX version is fetched from reference contract by auxiliary contract\\n\\tevent TREXVersionFetched(Version indexed version, TREXContracts indexed trex);\\n\\n\\t/// event emitted when the current version is updated\\n\\tevent VersionUpdated(Version indexed version);\\n\\n\\t/// event emitted by the constructor when the IA is deployed\\n\\tevent ImplementationAuthoritySet(bool referenceStatus, address trexFactory);\\n\\n\\t/// event emitted when the TREX factory address is set\\n\\tevent TREXFactorySet(address indexed trexFactory);\\n\\n\\t/// event emitted when the IA factory address is set\\n\\tevent IAFactorySet(address indexed iaFactory);\\n\\n\\t/// event emitted when a token issuer decides to change current IA for a new one\\n\\tevent ImplementationAuthorityChanged(address indexed _token, address indexed _newImplementationAuthority);\\n\\n\\t/// functions\\n\\n\\t/**\\n     *  @dev allows to fetch a TREX version available on the reference contract\\n     *  can be called only from auxiliary contracts, not on reference (main) contract\\n     *  throws if the version was already fetched\\n     *  adds the new version on the local storage\\n     *  allowing the update of contracts through the `useTREXVersion` afterwards\\n     */\\n\\tfunction fetchVersion(Version calldata _version) external;\\n\\n\\t/**\\n     *  @dev setter for _trexFactory variable\\n     *  _trexFactory is set at deployment for auxiliary contracts\\n     *  for main contract it must be set post-deployment as main IA is\\n     *  deployed before the TREXFactory.\\n     *  @param trexFactory the address of TREXFactory contract\\n     *  emits a TREXFactorySet event\\n     *  only Owner can call\\n     *  can be called only on main contract, auxiliary contracts cannot call\\n     */\\n\\tfunction setTREXFactory(address trexFactory) external;\\n\\n\\t/**\\n     *  @dev setter for _iaFactory variable\\n     *  _iaFactory is set at zero address for auxiliary contracts\\n     *  for main contract it can be set post-deployment or at deployment\\n     *  in the constructor\\n     *  @param iaFactory the address of IAFactory contract\\n     *  emits a IAFactorySet event\\n     *  only Owner can call\\n     *  can be called only on main contract, auxiliary contracts cannot call\\n     */\\n\\tfunction setIAFactory(address iaFactory) external;\\n\\n\\t/**\\n     *  @dev adds a new Version of TREXContracts to the mapping\\n     *  only callable on the reference contract\\n     *  only Owner can call this function\\n     *  @param _version the new version to add to the mapping\\n     *  @param _trex the list of contracts corresponding to the new version\\n     *  _trex cannot contain zero addresses\\n     *  emits a `TREXVersionAdded` event\\n     */\\n\\tfunction addTREXVersion(Version calldata _version, TREXContracts calldata _trex) external;\\n\\n\\t/**\\n     *  @dev updates the current version in use by the proxies\\n     *  variation of the `useTREXVersion` allowing to use a new version\\n     *  this function calls in a single transaction the `addTREXVersion`\\n     *  and the `useTREXVersion` using an existing version\\n     *  @param _version the version to use\\n     *  @param _trex the set of contracts corresponding to the version\\n     *  only Owner can call (check performed in addTREXVersion)\\n     *  only reference contract can call (check performed in addTREXVersion)\\n     *  emits a `TREXVersionAdded`event\\n     *  emits a `VersionUpdated` event\\n     */\\n\\tfunction addAndUseTREXVersion(Version calldata _version, TREXContracts calldata _trex) external;\\n\\n\\t/**\\n     *  @dev updates the current version in use by the proxies\\n     *  @param _version the version to use\\n     *  reverts if _version is already used or if version does not exist\\n     *  only Owner can call\\n     *  emits a `VersionUpdated` event\\n     */\\n\\tfunction useTREXVersion(Version calldata _version) external;\\n\\n\\t/**\\n     *  @dev change the implementationAuthority address of all proxy contracts linked to a given token\\n     *  only the owner of all proxy contracts can call this function\\n     *  @param _token the address of the token proxy\\n     *  @param _newImplementationAuthority the address of the new IA contract\\n     *  caller has to be owner of all contracts linked to the token and impacted by the change\\n     *  Set _newImplementationAuthority on zero address to deploy a new IA contract\\n     *  New IA contracts can only be deployed ONCE per token and only if current IA is the main IA\\n     *  if _newImplementationAuthority is not a new contract it must be using the same version\\n     *  as the current IA contract.\\n     *  calls `setImplementationAuthority` on all proxies linked to the token\\n     *  emits a `ImplementationAuthorityChanged` event\\n     */\\n\\tfunction changeImplementationAuthority(address _token, address _newImplementationAuthority) external;\\n\\n\\t/**\\n     *  @dev getter function returning the current version of contracts used by proxies\\n     */\\n\\tfunction getCurrentVersion() external view returns (Version memory);\\n\\n\\t/**\\n     *  @dev getter function returning the contracts corresponding to a version\\n     *  @param _version the version that contracts are requested for\\n     */\\n\\tfunction getContracts(Version calldata _version) external view returns (TREXContracts memory);\\n\\n\\t/**\\n     *  @dev getter function returning address of reference TREX factory\\n     */\\n\\tfunction getTREXFactory() external view returns (address);\\n\\n\\t/**\\n     *  @dev getter function returning address of token contract implementation\\n     *  currently used by the proxies using this TREXImplementationAuthority\\n     */\\n\\tfunction getTokenImplementation() external view returns (address);\\n\\n\\t/**\\n     *  @dev getter function returning address of ClaimTopicsRegistry contract implementation\\n     *  currently used by the proxies using this TREXImplementationAuthority\\n     */\\n\\tfunction getCTRImplementation() external view returns (address);\\n\\n\\t/**\\n     *  @dev getter function returning address of IdentityRegistry contract implementation\\n     *  currently used by the proxies using this TREXImplementationAuthority\\n     */\\n\\tfunction getIRImplementation() external view returns (address);\\n\\n\\t/**\\n     *  @dev getter function returning address of IdentityRegistryStorage contract implementation\\n     *  currently used by the proxies using this TREXImplementationAuthority\\n     */\\n\\tfunction getIRSImplementation() external view returns (address);\\n\\n\\t/**\\n     *  @dev getter function returning address of TrustedIssuersRegistry contract implementation\\n     *  currently used by the proxies using this TREXImplementationAuthority\\n     */\\n\\tfunction getTIRImplementation() external view returns (address);\\n\\n\\t/**\\n     *  @dev getter function returning address of ModularCompliance contract implementation\\n     *  currently used by the proxies using this TREXImplementationAuthority\\n     */\\n\\tfunction getMCImplementation() external view returns (address);\\n\\n\\t/**\\n     *  @dev returns true if the contract is the main contract\\n     *  returns false if the contract is an auxiliary contract\\n     */\\n\\tfunction isReferenceContract() external view returns (bool);\\n\\n\\t/**\\n     *  @dev getter for reference contract address\\n     */\\n\\tfunction getReferenceContract() external view returns (address);\\n}\\n\\n// File: contracts/proxy/interface/IProxy.sol\\n//\\n//                                             :+#####%%%%%%%%%%%%%%+\\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\\n//                                          +@@@@@. =@@@=  .+@@@@@*:\\n//                                          #@@@@#:%@@#. :*@@@@#-\\n//                                          @@@@@%@@@= :#@@@@+.\\n//                                         :@@@@@@@#.:#@@@%-\\n//                                         +@@@@@@-.*@@@*:\\n//                                         #@@@@#.=@@@+.\\n//                                         @@@@+-%@%=\\n//                                        :@@@#%@%=\\n//                                        +@@@@%-\\n//                                        :#%%=\\n//\\n/**\\n *     NOTICE\\n *\\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\\n *     If you choose to receive it under the GPL v.3 license, the following applies:\\n *     T-REX is a suite of smart contracts developed by Tokeny to manage and transfer financial assets on the ethereum blockchain\\n *\\n *     Copyright (C) 2022, Tokeny s\\u00e0rl.\\n *\\n *     This program is free software: you can redistribute it and/or modify\\n *     it under the terms of the GNU General Public License as published by\\n *     the Free Software Foundation, either version 3 of the License, or\\n *     (at your option) any later version.\\n *\\n *     This program is distributed in the hope that it will be useful,\\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n *     GNU General Public License for more details.\\n *\\n *     You should have received a copy of the GNU General Public License\\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\ninterface IProxy {\\n\\n\\t/// events\\n\\n\\tevent ImplementationAuthoritySet(address indexed _implementationAuthority);\\n\\n\\t/// functions\\n\\n\\tfunction setImplementationAuthority(address _newImplementationAuthority) external;\\n\\n\\tfunction getImplementationAuthority() external view returns(address);\\n}\\n\\n// File: @openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n\\t/**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n\\tfunction isContract(address account) internal view returns (bool) {\\n\\t\\t// This method relies on extcodesize/address.code.length, which returns 0\\n\\t\\t// for contracts in construction, since the code is only stored at the end\\n\\t\\t// of the constructor execution.\\n\\n\\t\\treturn account.code.length > 0;\\n\\t}\\n\\n\\t/**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n\\tfunction sendValue(address payable recipient, uint256 amount) internal {\\n\\t\\trequire(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n\\t\\t(bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n\\t\\trequire(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n\\t}\\n\\n\\t/**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n\\tfunction functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n\\t\\treturn functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n\\t}\\n\\n\\t/**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n\\tfunction functionCall(\\n\\t\\taddress target,\\n\\t\\tbytes memory data,\\n\\t\\tstring memory errorMessage\\n\\t) internal returns (bytes memory) {\\n\\t\\treturn functionCallWithValue(target, data, 0, errorMessage);\\n\\t}\\n\\n\\t/**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n\\tfunction functionCallWithValue(\\n\\t\\taddress target,\\n\\t\\tbytes memory data,\\n\\t\\tuint256 value\\n\\t) internal returns (bytes memory) {\\n\\t\\treturn functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n\\t}\\n\\n\\t/**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n\\tfunction functionCallWithValue(\\n\\t\\taddress target,\\n\\t\\tbytes memory data,\\n\\t\\tuint256 value,\\n\\t\\tstring memory errorMessage\\n\\t) internal returns (bytes memory) {\\n\\t\\trequire(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n\\t\\t(bool success, bytes memory returndata) = target.call{value: value}(data);\\n\\t\\treturn verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n\\t}\\n\\n\\t/**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n\\tfunction functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n\\t\\treturn functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n\\t}\\n\\n\\t/**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n\\tfunction functionStaticCall(\\n\\t\\taddress target,\\n\\t\\tbytes memory data,\\n\\t\\tstring memory errorMessage\\n\\t) internal view returns (bytes memory) {\\n\\t\\t(bool success, bytes memory returndata) = target.staticcall(data);\\n\\t\\treturn verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n\\t}\\n\\n\\t/**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n\\tfunction verifyCallResultFromTarget(\\n\\t\\taddress target,\\n\\t\\tbool success,\\n\\t\\tbytes memory returndata,\\n\\t\\tstring memory errorMessage\\n\\t) internal view returns (bytes memory) {\\n\\t\\tif (success) {\\n\\t\\t\\tif (returndata.length == 0) {\\n\\t\\t\\t\\t// only check isContract if the call was successful and the return data is empty\\n\\t\\t\\t\\t// otherwise we already know that it was a contract\\n\\t\\t\\t\\trequire(isContract(target), \\\"Address: call to non-contract\\\");\\n\\t\\t\\t}\\n\\t\\t\\treturn returndata;\\n\\t\\t} else {\\n\\t\\t\\t_revert(returndata, errorMessage);\\n\\t\\t}\\n\\t}\\n\\n\\t/**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n\\tfunction verifyCallResult(\\n\\t\\tbool success,\\n\\t\\tbytes memory returndata,\\n\\t\\tstring memory errorMessage\\n\\t) internal pure returns (bytes memory) {\\n\\t\\tif (success) {\\n\\t\\t\\treturn returndata;\\n\\t\\t} else {\\n\\t\\t\\t_revert(returndata, errorMessage);\\n\\t\\t}\\n\\t}\\n\\n\\tfunction _revert(bytes memory returndata, string memory errorMessage) private pure {\\n\\t\\t// Look for revert reason and bubble it up if present\\n\\t\\tif (returndata.length > 0) {\\n\\t\\t\\t// The easiest way to bubble the revert reason is using memory via assembly\\n\\t\\t\\t/// @solidity memory-safe-assembly\\n\\t\\t\\tassembly {\\n\\t\\t\\t\\tlet returndata_size := mload(returndata)\\n\\t\\t\\t\\trevert(add(32, returndata), returndata_size)\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\trevert(errorMessage);\\n\\t\\t}\\n\\t}\\n}\\n\\n// File: @openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\n// OpenZeppelin Contracts (last updated v4.8.1) (proxy/utils/Initializable.sol)\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n\\t/**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n\\tuint8 private _initialized;\\n\\n\\t/**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n\\tbool private _initializing;\\n\\n\\t/**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n\\tevent Initialized(uint8 version);\\n\\n\\t/**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n\\tmodifier initializer() {\\n\\t\\tbool isTopLevelCall = !_initializing;\\n\\t\\trequire(\\n\\t\\t\\t(isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n\\t\\t\\t\\\"Initializable: contract is already initialized\\\"\\n\\t\\t);\\n\\t\\t_initialized = 1;\\n\\t\\tif (isTopLevelCall) {\\n\\t\\t\\t_initializing = true;\\n\\t\\t}\\n\\t\\t_;\\n\\t\\tif (isTopLevelCall) {\\n\\t\\t\\t_initializing = false;\\n\\t\\t\\temit Initialized(1);\\n\\t\\t}\\n\\t}\\n\\n\\t/**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n\\tmodifier reinitializer(uint8 version) {\\n\\t\\trequire(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n\\t\\t_initialized = version;\\n\\t\\t_initializing = true;\\n\\t\\t_;\\n\\t\\t_initializing = false;\\n\\t\\temit Initialized(version);\\n\\t}\\n\\n\\t/**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n\\tmodifier onlyInitializing() {\\n\\t\\trequire(_initializing, \\\"Initializable: contract is not initializing\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\t/**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n\\tfunction _disableInitializers() internal virtual {\\n\\t\\trequire(!_initializing, \\\"Initializable: contract is initializing\\\");\\n\\t\\tif (_initialized < type(uint8).max) {\\n\\t\\t\\t_initialized = type(uint8).max;\\n\\t\\t\\temit Initialized(type(uint8).max);\\n\\t\\t}\\n\\t}\\n\\n\\t/**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n\\tfunction _getInitializedVersion() internal view returns (uint8) {\\n\\t\\treturn _initialized;\\n\\t}\\n\\n\\t/**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n\\tfunction _isInitializing() internal view returns (bool) {\\n\\t\\treturn _initializing;\\n\\t}\\n}\\n\\n// File: contracts/proxy/AbstractProxy.sol\\n//\\n//                                             :+#####%%%%%%%%%%%%%%+\\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\\n//                                          +@@@@@. =@@@=  .+@@@@@*:\\n//                                          #@@@@#:%@@#. :*@@@@#-\\n//                                          @@@@@%@@@= :#@@@@+.\\n//                                         :@@@@@@@#.:#@@@%-\\n//                                         +@@@@@@-.*@@@*:\\n//                                         #@@@@#.=@@@+.\\n//                                         @@@@+-%@%=\\n//                                        :@@@#%@%=\\n//                                        +@@@@%-\\n//                                        :#%%=\\n//\\n/**\\n *     NOTICE\\n *\\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\\n *     If you choose to receive it under the GPL v.3 license, the following applies:\\n *     T-REX is a suite of smart contracts developed by Tokeny to manage and transfer financial assets on the ethereum blockchain\\n *\\n *     Copyright (C) 2022, Tokeny s\\u00e0rl.\\n *\\n *     This program is free software: you can redistribute it and/or modify\\n *     it under the terms of the GNU General Public License as published by\\n *     the Free Software Foundation, either version 3 of the License, or\\n *     (at your option) any later version.\\n *\\n *     This program is distributed in the hope that it will be useful,\\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n *     GNU General Public License for more details.\\n *\\n *     You should have received a copy of the GNU General Public License\\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n\\nabstract contract AbstractProxy is IProxy, Initializable {\\n\\n\\t/**\\n     *  @dev See {IProxy-setImplementationAuthority}.\\n     */\\n\\tfunction setImplementationAuthority(address _newImplementationAuthority) external override {\\n\\t\\trequire(msg.sender == getImplementationAuthority(), \\\"only current implementationAuthority can call\\\");\\n\\t\\trequire(_newImplementationAuthority != address(0), \\\"invalid argument - zero address\\\");\\n\\t\\trequire(\\n\\t\\t\\t(ITREXImplementationAuthority(_newImplementationAuthority)).getTokenImplementation() != address(0)\\n\\t\\t\\t&& (ITREXImplementationAuthority(_newImplementationAuthority)).getCTRImplementation() != address(0)\\n\\t\\t\\t&& (ITREXImplementationAuthority(_newImplementationAuthority)).getIRImplementation() != address(0)\\n\\t\\t\\t&& (ITREXImplementationAuthority(_newImplementationAuthority)).getIRSImplementation() != address(0)\\n\\t\\t\\t&& (ITREXImplementationAuthority(_newImplementationAuthority)).getMCImplementation() != address(0)\\n\\t\\t\\t&& (ITREXImplementationAuthority(_newImplementationAuthority)).getTIRImplementation() != address(0)\\n\\t\\t\\t, \\\"invalid Implementation Authority\\\");\\n\\t\\t_storeImplementationAuthority(_newImplementationAuthority);\\n\\t\\temit ImplementationAuthoritySet(_newImplementationAuthority);\\n\\t}\\n\\n\\t/**\\n     *  @dev See {IProxy-getImplementationAuthority}.\\n     */\\n\\tfunction getImplementationAuthority() public override view returns(address) {\\n\\t\\taddress implemAuth;\\n\\t\\t// solhint-disable-next-line no-inline-assembly\\n\\t\\tassembly {\\n\\t\\t\\timplemAuth := sload(0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7)\\n\\t\\t}\\n\\t\\treturn implemAuth;\\n\\t}\\n\\n\\t/**\\n     *  @dev store the implementationAuthority contract address using the ERC-1822 implementation slot in storage\\n     */\\n\\tfunction _storeImplementationAuthority(address implementationAuthority) internal {\\n\\t\\t// solhint-disable-next-line no-inline-assembly\\n\\t\\tassembly {\\n\\t\\t\\tsstore(0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7, implementationAuthority)\\n\\t\\t}\\n\\t}\\n\\n}\\n\\n// File: contracts/proxy/TokenProxy.sol\\n//\\n//                                             :+#####%%%%%%%%%%%%%%+\\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\\n//                                          +@@@@@. =@@@=  .+@@@@@*:\\n//                                          #@@@@#:%@@#. :*@@@@#-\\n//                                          @@@@@%@@@= :#@@@@+.\\n//                                         :@@@@@@@#.:#@@@%-\\n//                                         +@@@@@@-.*@@@*:\\n//                                         #@@@@#.=@@@+.\\n//                                         @@@@+-%@%=\\n//                                        :@@@#%@%=\\n//                                        +@@@@%-\\n//                                        :#%%=\\n//\\n/**\\n *     NOTICE\\n *\\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\\n *     If you choose to receive it under the GPL v.3 license, the following applies:\\n *     T-REX is a suite of smart contracts developed by Tokeny to manage and transfer financial assets on the ethereum blockchain\\n *\\n *     Copyright (C) 2022, Tokeny s\\u00e0rl.\\n *\\n *     This program is free software: you can redistribute it and/or modify\\n *     it under the terms of the GNU General Public License as published by\\n *     the Free Software Foundation, either version 3 of the License, or\\n *     (at your option) any later version.\\n *\\n *     This program is distributed in the hope that it will be useful,\\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n *     GNU General Public License for more details.\\n *\\n *     You should have received a copy of the GNU General Public License\\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\ncontract TokenProxy is AbstractProxy {\\n\\n\\tconstructor(\\n\\t\\taddress implementationAuthority,\\n\\t\\taddress _identityRegistry,\\n\\t\\taddress _compliance,\\n\\t\\tstring memory _name,\\n\\t\\tstring memory _symbol,\\n\\t\\tuint8 _decimals,\\n\\t// _onchainID can be 0 address if the token has no ONCHAINID, ONCHAINID can be set later by the token Owner\\n\\t\\taddress _onchainID\\n\\t) {\\n\\t\\trequire(\\n\\t\\t\\timplementationAuthority != address(0)\\n\\t\\t\\t&& _identityRegistry != address(0)\\n\\t\\t\\t&& _compliance != address(0)\\n\\t\\t\\t, \\\"invalid argument - zero address\\\");\\n\\t\\trequire(\\n\\t\\t\\tkeccak256(abi.encode(_name)) != keccak256(abi.encode(\\\"\\\"))\\n\\t\\t\\t&& keccak256(abi.encode(_symbol)) != keccak256(abi.encode(\\\"\\\"))\\n\\t\\t\\t, \\\"invalid argument - empty string\\\");\\n\\t\\trequire(0 <= _decimals && _decimals <= 18, \\\"decimals between 0 and 18\\\");\\n\\t\\t_storeImplementationAuthority(implementationAuthority);\\n\\t\\temit ImplementationAuthoritySet(implementationAuthority);\\n\\n\\t\\taddress logic = (ITREXImplementationAuthority(getImplementationAuthority())).getTokenImplementation();\\n\\n\\t\\t// solhint-disable-next-line avoid-low-level-calls\\n\\t\\t(bool success, ) = logic.delegatecall(\\n\\t\\t\\tabi.encodeWithSignature(\\n\\t\\t\\t\\t\\\"init(address,address,string,string,uint8,address)\\\",\\n\\t\\t\\t\\t_identityRegistry,\\n\\t\\t\\t\\t_compliance,\\n\\t\\t\\t\\t_name,\\n\\t\\t\\t\\t_symbol,\\n\\t\\t\\t\\t_decimals,\\n\\t\\t\\t\\t_onchainID\\n\\t\\t\\t)\\n\\t\\t);\\n\\t\\trequire(success, \\\"Initialization failed.\\\");\\n\\t}\\n\\n\\t// solhint-disable-next-line no-complex-fallback\\n\\tfallback() external payable {\\n\\t\\taddress logic = (ITREXImplementationAuthority(getImplementationAuthority())).getTokenImplementation();\\n\\n\\t\\t// solhint-disable-next-line no-inline-assembly\\n\\t\\tassembly {\\n\\t\\t\\tcalldatacopy(0x0, 0x0, calldatasize())\\n\\t\\t\\tlet success := delegatecall(sub(gas(), 10000), logic, 0x0, calldatasize(), 0, 0)\\n\\t\\t\\tlet retSz := returndatasize()\\n\\t\\t\\treturndatacopy(0, 0, retSz)\\n\\t\\t\\tswitch success\\n\\t\\t\\tcase 0 {\\n\\t\\t\\t\\trevert(0, retSz)\\n\\t\\t\\t}\\n\\t\\t\\tdefault {\\n\\t\\t\\t\\treturn(0, retSz)\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\\n// File: contracts/proxy/ClaimTopicsRegistryProxy.sol\\n//\\n//                                             :+#####%%%%%%%%%%%%%%+\\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\\n//                                          +@@@@@. =@@@=  .+@@@@@*:\\n//                                          #@@@@#:%@@#. :*@@@@#-\\n//                                          @@@@@%@@@= :#@@@@+.\\n//                                         :@@@@@@@#.:#@@@%-\\n//                                         +@@@@@@-.*@@@*:\\n//                                         #@@@@#.=@@@+.\\n//                                         @@@@+-%@%=\\n//                                        :@@@#%@%=\\n//                                        +@@@@%-\\n//                                        :#%%=\\n//\\n/**\\n *     NOTICE\\n *\\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\\n *     If you choose to receive it under the GPL v.3 license, the following applies:\\n *     T-REX is a suite of smart contracts developed by Tokeny to manage and transfer financial assets on the ethereum blockchain\\n *\\n *     Copyright (C) 2022, Tokeny s\\u00e0rl.\\n *\\n *     This program is free software: you can redistribute it and/or modify\\n *     it under the terms of the GNU General Public License as published by\\n *     the Free Software Foundation, either version 3 of the License, or\\n *     (at your option) any later version.\\n *\\n *     This program is distributed in the hope that it will be useful,\\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n *     GNU General Public License for more details.\\n *\\n *     You should have received a copy of the GNU General Public License\\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\ncontract ClaimTopicsRegistryProxy is AbstractProxy {\\n\\n\\tconstructor(address implementationAuthority) {\\n\\t\\trequire(implementationAuthority != address(0), \\\"invalid argument - zero address\\\");\\n\\t\\t_storeImplementationAuthority(implementationAuthority);\\n\\t\\temit ImplementationAuthoritySet(implementationAuthority);\\n\\n\\t\\taddress logic = (ITREXImplementationAuthority(getImplementationAuthority())).getCTRImplementation();\\n\\n\\t\\t// solhint-disable-next-line avoid-low-level-calls\\n\\t\\t(bool success, ) = logic.delegatecall(abi.encodeWithSignature(\\\"init()\\\"));\\n\\t\\trequire(success, \\\"Initialization failed.\\\");\\n\\t}\\n\\n\\t// solhint-disable-next-line no-complex-fallback\\n\\tfallback() external payable {\\n\\t\\taddress logic = (ITREXImplementationAuthority(getImplementationAuthority())).getCTRImplementation();\\n\\n\\t\\t// solhint-disable-next-line no-inline-assembly\\n\\t\\tassembly {\\n\\t\\t\\tcalldatacopy(0x0, 0x0, calldatasize())\\n\\t\\t\\tlet success := delegatecall(sub(gas(), 10000), logic, 0x0, calldatasize(), 0, 0)\\n\\t\\t\\tlet retSz := returndatasize()\\n\\t\\t\\treturndatacopy(0, 0, retSz)\\n\\t\\t\\tswitch success\\n\\t\\t\\tcase 0 {\\n\\t\\t\\t\\trevert(0, retSz)\\n\\t\\t\\t}\\n\\t\\t\\tdefault {\\n\\t\\t\\t\\treturn(0, retSz)\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\\n// File: contracts/proxy/IdentityRegistryProxy.sol\\n//\\n//                                             :+#####%%%%%%%%%%%%%%+\\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\\n//                                          +@@@@@. =@@@=  .+@@@@@*:\\n//                                          #@@@@#:%@@#. :*@@@@#-\\n//                                          @@@@@%@@@= :#@@@@+.\\n//                                         :@@@@@@@#.:#@@@%-\\n//                                         +@@@@@@-.*@@@*:\\n//                                         #@@@@#.=@@@+.\\n//                                         @@@@+-%@%=\\n//                                        :@@@#%@%=\\n//                                        +@@@@%-\\n//                                        :#%%=\\n//\\n/**\\n *     NOTICE\\n *\\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\\n *     If you choose to receive it under the GPL v.3 license, the following applies:\\n *     T-REX is a suite of smart contracts developed by Tokeny to manage and transfer financial assets on the ethereum blockchain\\n *\\n *     Copyright (C) 2022, Tokeny s\\u00e0rl.\\n *\\n *     This program is free software: you can redistribute it and/or modify\\n *     it under the terms of the GNU General Public License as published by\\n *     the Free Software Foundation, either version 3 of the License, or\\n *     (at your option) any later version.\\n *\\n *     This program is distributed in the hope that it will be useful,\\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n *     GNU General Public License for more details.\\n *\\n *     You should have received a copy of the GNU General Public License\\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\ncontract IdentityRegistryProxy is AbstractProxy {\\n\\n\\tconstructor(\\n\\t\\taddress implementationAuthority,\\n\\t\\taddress _trustedIssuersRegistry,\\n\\t\\taddress _claimTopicsRegistry,\\n\\t\\taddress _identityStorage\\n\\t) {\\n\\t\\trequire(\\n\\t\\t\\timplementationAuthority != address(0)\\n\\t\\t\\t&& _trustedIssuersRegistry != address(0)\\n\\t\\t\\t&& _claimTopicsRegistry != address(0)\\n\\t\\t\\t&& _identityStorage != address(0)\\n\\t\\t\\t, \\\"invalid argument - zero address\\\");\\n\\t\\t_storeImplementationAuthority(implementationAuthority);\\n\\t\\temit ImplementationAuthoritySet(implementationAuthority);\\n\\n\\t\\taddress logic = (ITREXImplementationAuthority(getImplementationAuthority())).getIRImplementation();\\n\\n\\t\\t// solhint-disable-next-line avoid-low-level-calls\\n\\t\\t(bool success, ) = logic.delegatecall(\\n\\t\\t\\tabi.encodeWithSignature(\\n\\t\\t\\t\\t\\\"init(address,address,address)\\\",\\n\\t\\t\\t\\t_trustedIssuersRegistry,\\n\\t\\t\\t\\t_claimTopicsRegistry,\\n\\t\\t\\t\\t_identityStorage));\\n\\t\\trequire(success, \\\"Initialization failed.\\\");\\n\\t}\\n\\n\\t// solhint-disable-next-line no-complex-fallback\\n\\tfallback() external payable {\\n\\t\\taddress logic = (ITREXImplementationAuthority(getImplementationAuthority())).getIRImplementation();\\n\\n\\t\\t// solhint-disable-next-line no-inline-assembly\\n\\t\\tassembly {\\n\\t\\t\\tcalldatacopy(0x0, 0x0, calldatasize())\\n\\t\\t\\tlet success := delegatecall(sub(gas(), 10000), logic, 0x0, calldatasize(), 0, 0)\\n\\t\\t\\tlet retSz := returndatasize()\\n\\t\\t\\treturndatacopy(0, 0, retSz)\\n\\t\\t\\tswitch success\\n\\t\\t\\tcase 0 {\\n\\t\\t\\t\\trevert(0, retSz)\\n\\t\\t\\t}\\n\\t\\t\\tdefault {\\n\\t\\t\\t\\treturn(0, retSz)\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\\n// File: contracts/proxy/IdentityRegistryStorageProxy.sol\\n//\\n//                                             :+#####%%%%%%%%%%%%%%+\\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\\n//                                          +@@@@@. =@@@=  .+@@@@@*:\\n//                                          #@@@@#:%@@#. :*@@@@#-\\n//                                          @@@@@%@@@= :#@@@@+.\\n//                                         :@@@@@@@#.:#@@@%-\\n//                                         +@@@@@@-.*@@@*:\\n//                                         #@@@@#.=@@@+.\\n//                                         @@@@+-%@%=\\n//                                        :@@@#%@%=\\n//                                        +@@@@%-\\n//                                        :#%%=\\n//\\n/**\\n *     NOTICE\\n *\\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\\n *     If you choose to receive it under the GPL v.3 license, the following applies:\\n *     T-REX is a suite of smart contracts developed by Tokeny to manage and transfer financial assets on the ethereum blockchain\\n *\\n *     Copyright (C) 2022, Tokeny s\\u00e0rl.\\n *\\n *     This program is free software: you can redistribute it and/or modify\\n *     it under the terms of the GNU General Public License as published by\\n *     the Free Software Foundation, either version 3 of the License, or\\n *     (at your option) any later version.\\n *\\n *     This program is distributed in the hope that it will be useful,\\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n *     GNU General Public License for more details.\\n *\\n *     You should have received a copy of the GNU General Public License\\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\ncontract IdentityRegistryStorageProxy is AbstractProxy {\\n\\n\\tconstructor(address implementationAuthority) {\\n\\t\\trequire(implementationAuthority != address(0), \\\"invalid argument - zero address\\\");\\n\\t\\t_storeImplementationAuthority(implementationAuthority);\\n\\t\\temit ImplementationAuthoritySet(implementationAuthority);\\n\\n\\t\\taddress logic = (ITREXImplementationAuthority(getImplementationAuthority())).getIRSImplementation();\\n\\n\\t\\t// solhint-disable-next-line avoid-low-level-calls\\n\\t\\t(bool success, ) = logic.delegatecall(abi.encodeWithSignature(\\\"init()\\\"));\\n\\t\\trequire(success, \\\"Initialization failed.\\\");\\n\\t}\\n\\n\\t// solhint-disable-next-line no-complex-fallback\\n\\tfallback() external payable {\\n\\t\\taddress logic = (ITREXImplementationAuthority(getImplementationAuthority())).getIRSImplementation();\\n\\n\\t\\t// solhint-disable-next-line no-inline-assembly\\n\\t\\tassembly {\\n\\t\\t\\tcalldatacopy(0x0, 0x0, calldatasize())\\n\\t\\t\\tlet success := delegatecall(sub(gas(), 10000), logic, 0x0, calldatasize(), 0, 0)\\n\\t\\t\\tlet retSz := returndatasize()\\n\\t\\t\\treturndatacopy(0, 0, retSz)\\n\\t\\t\\tswitch success\\n\\t\\t\\tcase 0 {\\n\\t\\t\\t\\trevert(0, retSz)\\n\\t\\t\\t}\\n\\t\\t\\tdefault {\\n\\t\\t\\t\\treturn(0, retSz)\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\\n// File: contracts/proxy/TrustedIssuersRegistryProxy.sol\\n//\\n//                                             :+#####%%%%%%%%%%%%%%+\\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\\n//                                          +@@@@@. =@@@=  .+@@@@@*:\\n//                                          #@@@@#:%@@#. :*@@@@#-\\n//                                          @@@@@%@@@= :#@@@@+.\\n//                                         :@@@@@@@#.:#@@@%-\\n//                                         +@@@@@@-.*@@@*:\\n//                                         #@@@@#.=@@@+.\\n//                                         @@@@+-%@%=\\n//                                        :@@@#%@%=\\n//                                        +@@@@%-\\n//                                        :#%%=\\n//\\n\\n/**\\n *     NOTICE\\n *\\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\\n *     If you choose to receive it under the GPL v.3 license, the following applies:\\n *     T-REX is a suite of smart contracts developed by Tokeny to manage and transfer financial assets on the ethereum blockchain\\n *\\n *     Copyright (C) 2022, Tokeny s\\u00e0rl.\\n *\\n *     This program is free software: you can redistribute it and/or modify\\n *     it under the terms of the GNU General Public License as published by\\n *     the Free Software Foundation, either version 3 of the License, or\\n *     (at your option) any later version.\\n *\\n *     This program is distributed in the hope that it will be useful,\\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n *     GNU General Public License for more details.\\n *\\n *     You should have received a copy of the GNU General Public License\\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\ncontract TrustedIssuersRegistryProxy is AbstractProxy {\\n\\n\\tconstructor(address implementationAuthority) {\\n\\t\\trequire(implementationAuthority != address(0), \\\"invalid argument - zero address\\\");\\n\\t\\t_storeImplementationAuthority(implementationAuthority);\\n\\t\\temit ImplementationAuthoritySet(implementationAuthority);\\n\\n\\t\\taddress logic = (ITREXImplementationAuthority(getImplementationAuthority())).getTIRImplementation();\\n\\n\\t\\t// solhint-disable-next-line avoid-low-level-calls\\n\\t\\t(bool success, ) = logic.delegatecall(abi.encodeWithSignature(\\\"init()\\\"));\\n\\t\\trequire(success, \\\"Initialization failed.\\\");\\n\\t}\\n\\n\\t// solhint-disable-next-line no-complex-fallback\\n\\tfallback() external payable {\\n\\t\\taddress logic = (ITREXImplementationAuthority(getImplementationAuthority())).getTIRImplementation();\\n\\n\\t\\t// solhint-disable-next-line no-inline-assembly\\n\\t\\tassembly {\\n\\t\\t\\tcalldatacopy(0x0, 0x0, calldatasize())\\n\\t\\t\\tlet success := delegatecall(sub(gas(), 10000), logic, 0x0, calldatasize(), 0, 0)\\n\\t\\t\\tlet retSz := returndatasize()\\n\\t\\t\\treturndatacopy(0, 0, retSz)\\n\\t\\t\\tswitch success\\n\\t\\t\\tcase 0 {\\n\\t\\t\\t\\trevert(0, retSz)\\n\\t\\t\\t}\\n\\t\\t\\tdefault {\\n\\t\\t\\t\\treturn(0, retSz)\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\\n// File: contracts/proxy/ModularComplianceProxy.sol\\n//\\n//                                             :+#####%%%%%%%%%%%%%%+\\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\\n//                                          +@@@@@. =@@@=  .+@@@@@*:\\n//                                          #@@@@#:%@@#. :*@@@@#-\\n//                                          @@@@@%@@@= :#@@@@+.\\n//                                         :@@@@@@@#.:#@@@%-\\n//                                         +@@@@@@-.*@@@*:\\n//                                         #@@@@#.=@@@+.\\n//                                         @@@@+-%@%=\\n//                                        :@@@#%@%=\\n//                                        +@@@@%-\\n//                                        :#%%=\\n//\\n/**\\n *     NOTICE\\n *\\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\\n *     If you choose to receive it under the GPL v.3 license, the following applies:\\n *     T-REX is a suite of smart contracts developed by Tokeny to manage and transfer financial assets on the ethereum blockchain\\n *\\n *     Copyright (C) 2022, Tokeny s\\u00e0rl.\\n *\\n *     This program is free software: you can redistribute it and/or modify\\n *     it under the terms of the GNU General Public License as published by\\n *     the Free Software Foundation, either version 3 of the License, or\\n *     (at your option) any later version.\\n *\\n *     This program is distributed in the hope that it will be useful,\\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n *     GNU General Public License for more details.\\n *\\n *     You should have received a copy of the GNU General Public License\\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\ncontract ModularComplianceProxy is AbstractProxy {\\n\\n\\tconstructor(address implementationAuthority) {\\n\\t\\trequire(implementationAuthority != address(0), \\\"invalid argument - zero address\\\");\\n\\t\\t_storeImplementationAuthority(implementationAuthority);\\n\\t\\temit ImplementationAuthoritySet(implementationAuthority);\\n\\n\\t\\taddress logic = (ITREXImplementationAuthority(getImplementationAuthority())).getMCImplementation();\\n\\n\\t\\t// solhint-disable-next-line avoid-low-level-calls\\n\\t\\t(bool success, ) = logic.delegatecall(abi.encodeWithSignature(\\\"init()\\\"));\\n\\t\\trequire(success, \\\"Initialization failed.\\\");\\n\\t}\\n\\n\\t// solhint-disable-next-line no-complex-fallback\\n\\tfallback() external payable {\\n\\t\\taddress logic = (ITREXImplementationAuthority(getImplementationAuthority())).getMCImplementation();\\n\\n\\t\\t// solhint-disable-next-line no-inline-assembly\\n\\t\\tassembly {\\n\\t\\t\\tcalldatacopy(0x0, 0x0, calldatasize())\\n\\t\\t\\tlet success := delegatecall(sub(gas(), 10000), logic, 0x0, calldatasize(), 0, 0)\\n\\t\\t\\tlet retSz := returndatasize()\\n\\t\\t\\treturndatacopy(0, 0, retSz)\\n\\t\\t\\tswitch success\\n\\t\\t\\tcase 0 {\\n\\t\\t\\t\\trevert(0, retSz)\\n\\t\\t\\t}\\n\\t\\t\\tdefault {\\n\\t\\t\\t\\treturn(0, retSz)\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\\n// File: contracts/factory/ITREXFactory.sol\\n//\\n//                                             :+#####%%%%%%%%%%%%%%+\\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\\n//                                          +@@@@@. =@@@=  .+@@@@@*:\\n//                                          #@@@@#:%@@#. :*@@@@#-\\n//                                          @@@@@%@@@= :#@@@@+.\\n//                                         :@@@@@@@#.:#@@@%-\\n//                                         +@@@@@@-.*@@@*:\\n//                                         #@@@@#.=@@@+.\\n//                                         @@@@+-%@%=\\n//                                        :@@@#%@%=\\n//                                        +@@@@%-\\n//                                        :#%%=\\n//\\n/**\\n *     NOTICE\\n *\\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\\n *     If you choose to receive it under the GPL v.3 license, the following applies:\\n *     T-REX is a suite of smart contracts developed by Tokeny to manage and transfer financial assets on the ethereum blockchain\\n *\\n *     Copyright (C) 2022, Tokeny s\\u00e0rl.\\n *\\n *     This program is free software: you can redistribute it and/or modify\\n *     it under the terms of the GNU General Public License as published by\\n *     the Free Software Foundation, either version 3 of the License, or\\n *     (at your option) any later version.\\n *\\n *     This program is distributed in the hope that it will be useful,\\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n *     GNU General Public License for more details.\\n *\\n *     You should have received a copy of the GNU General Public License\\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\ninterface ITREXFactory {\\n\\n\\t/// Types\\n\\n\\tstruct TokenDetails {\\n\\t\\t// address of the owner of all contracts\\n\\t\\taddress owner;\\n\\t\\t// name of the token\\n\\t\\tstring name;\\n\\t\\t// symbol / ticker of the token\\n\\t\\tstring symbol;\\n\\t\\t// decimals of the token (can be between 0 and 18)\\n\\t\\tuint8 decimals;\\n\\t\\t// identity registry storage address\\n\\t\\t// set it to ZERO address if you want to deploy a new storage\\n\\t\\t// if an address is provided, please ensure that the factory is set as owner of the contract\\n\\t\\taddress irs;\\n\\t\\t// ONCHAINID of the token\\n\\t\\t// solhint-disable-next-line var-name-mixedcase\\n\\t\\taddress ONCHAINID;\\n\\t\\t// list of agents of the identity registry (can be set to an AgentManager contract)\\n\\t\\taddress[] irAgents;\\n\\t\\t// list of agents of the token\\n\\t\\taddress[] tokenAgents;\\n\\t\\t// modules to bind to the compliance, indexes are corresponding to the settings callData indexes\\n\\t\\t// if a module doesn't require settings, it can be added at the end of the array, at index > settings.length\\n\\t\\taddress[] complianceModules;\\n\\t\\t// settings calls for compliance modules\\n\\t\\tbytes[] complianceSettings;\\n\\t}\\n\\n\\tstruct ClaimDetails {\\n\\t\\t// claim topics required\\n\\t\\tuint256[] claimTopics;\\n\\t\\t// trusted issuers addresses\\n\\t\\taddress[] issuers;\\n\\t\\t// claims that issuers are allowed to emit, by index, index corresponds to the `issuers` indexes\\n\\t\\tuint256[][] issuerClaims;\\n\\t}\\n\\n\\t/// events\\n\\n\\t/// event emitted whenever a single contract is deployed by the factory\\n\\tevent Deployed(address indexed _addr);\\n\\n\\t/// event emitted when the implementation authority of the factory contract is set\\n\\tevent ImplementationAuthoritySet(address _implementationAuthority);\\n\\n\\t/// event emitted by the factory when a full suite of T-REX contracts is deployed\\n\\tevent TREXSuiteDeployed(address indexed _token, address _ir, address _irs, address _tir, address _ctr, address\\n\\t_mc, string indexed _salt);\\n\\n\\t/// functions\\n\\n\\t/**\\n     *  @dev setter for implementation authority contract address\\n     *  the implementation authority contract contains the addresses of all implementation contracts\\n     *  the proxies created by the factory will use the different implementations available\\n     *  in the implementation authority contract\\n     *  Only owner can call.\\n     *  emits `ImplementationAuthoritySet` event\\n     *  @param _implementationAuthority The address of the implementation authority smart contract\\n     */\\n\\tfunction setImplementationAuthority(address _implementationAuthority) external;\\n\\n\\t/**\\n     *  @dev function used to deploy a new TREX token and set all the parameters as required by the issuer paperwork\\n     *  this function will deploy and set the contracts as follow :\\n     *  Token : deploy the token contract (proxy) and set the name, symbol, ONCHAINID, decimals, owner, agents,\\n     *  IR address , Compliance address\\n     *  Identity Registry : deploy the IR contract (proxy) and set the owner, agents,\\n     *  IRS address, TIR address, CTR address\\n     *  IRS : deploy IRS contract (proxy) if required (address set as 0 in the TokenDetails, bind IRS to IR, set owner\\n     *  CTR : deploy CTR contract (proxy), set required claims, set owner\\n     *  TIR : deploy TIR contract (proxy), set trusted issuers, set owner\\n     *  Compliance: deploy modular compliance, bind with token, add modules, set modules parameters, set owner\\n     *  All contracts are deployed using CREATE2 opcode, and therefore are deployed at a predetermined address\\n     *  The address can be the same on all EVM blockchains as long as the factory address is the same as well\\n     *  Only owner can call.\\n     *  emits `TREXSuiteDeployed` event\\n     *  @param _salt the salt used to make the contracts deployments with CREATE2\\n     *  @param _tokenDetails The details of the token to deploy (see struct TokenDetails for more details)\\n     *  @param _claimDetails The details of the claims and claim issuers (see struct ClaimDetails for more details)\\n     *  cannot add more than 5 agents on IR and 5 agents on Token\\n     *  cannot add more than 5 claim topics required and more than 5 trusted issuers\\n     *  cannot add more than 30 compliance settings transactions\\n     */\\n\\tfunction deployTREXSuite(\\n\\t\\tstring memory _salt,\\n\\t\\tTokenDetails calldata _tokenDetails,\\n\\t\\tClaimDetails calldata _claimDetails) external;\\n\\n\\t/**\\n     *  @dev function that can be used to recover the ownership of contracts owned by the factory\\n     *  typically used for IRS contracts owned by the factory (ownership of IRS is mandatory to call bind function)\\n     *  @param _contract The smart contract address\\n     *  @param _newOwner The address to transfer ownership to\\n     *  Only owner can call.\\n     */\\n\\tfunction recoverContractOwnership(address _contract, address _newOwner) external;\\n\\n\\t/**\\n     *  @dev getter for implementation authority address\\n     */\\n\\tfunction getImplementationAuthority() external view returns(address);\\n\\n\\t/**\\n     *  @dev getter for token address corresponding to salt string\\n     *  @param _salt The salt string that was used to deploy the token\\n     */\\n\\tfunction getToken(string calldata _salt) external view returns(address);\\n}\\n\\n// File: contracts/factory/TREXFactory.sol\\n//\\n//                                             :+#####%%%%%%%%%%%%%%+\\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\\n//                                          +@@@@@. =@@@=  .+@@@@@*:\\n//                                          #@@@@#:%@@#. :*@@@@#-\\n//                                          @@@@@%@@@= :#@@@@+.\\n//                                         :@@@@@@@#.:#@@@%-\\n//                                         +@@@@@@-.*@@@*:\\n//                                         #@@@@#.=@@@+.\\n//                                         @@@@+-%@%=\\n//                                        :@@@#%@%=\\n//                                        +@@@@%-\\n//                                        :#%%=\\n//\\n/**\\n *     NOTICE\\n *\\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\\n *     If you choose to receive it under the GPL v.3 license, the following applies:\\n *     T-REX is a suite of smart contracts developed by Tokeny to manage and transfer financial assets on the ethereum blockchain\\n *\\n *     Copyright (C) 2022, Tokeny s\\u00e0rl.\\n *\\n *     This program is free software: you can redistribute it and/or modify\\n *     it under the terms of the GNU General Public License as published by\\n *     the Free Software Foundation, either version 3 of the License, or\\n *     (at your option) any later version.\\n *\\n *     This program is distributed in the hope that it will be useful,\\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n *     GNU General Public License for more details.\\n *\\n *     You should have received a copy of the GNU General Public License\\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n\\ncontract TREXFactory is ITREXFactory, Ownable {\\n\\n\\t/// the address of the implementation authority contract used in the tokens deployed by the factory\\n\\taddress private _implementationAuthority;\\n\\n\\t/// mapping containing info about the token contracts corresponding to salt already used for CREATE2 deployments\\n\\tmapping(string => address) public tokenDeployed;\\n\\n\\t/**\\n     *  @dev See {ITREXFactory-deployTREXSuite}.\\n     */\\n\\t// solhint-disable-next-line code-complexity, function-max-lines\\n\\tfunction deployTREXSuite(string memory _salt, TokenDetails calldata _tokenDetails, ClaimDetails calldata\\n\\t\\t_claimDetails)\\n\\texternal override onlyOwner {\\n\\t\\trequire(tokenDeployed[_salt] == address(0)\\n\\t\\t\\t, \\\"token already deployed\\\");\\n\\t\\trequire((_claimDetails.issuers).length == (_claimDetails.issuerClaims).length\\n\\t\\t\\t, \\\"claim pattern not valid\\\");\\n\\t\\trequire((_claimDetails.issuers).length <= 5\\n\\t\\t\\t, \\\"max 5 claim issuers at deployment\\\");\\n\\t\\trequire((_claimDetails.claimTopics).length <= 5\\n\\t\\t\\t, \\\"max 5 claim topics at deployment\\\");\\n\\t\\trequire((_tokenDetails.irAgents).length <= 5 && (_tokenDetails.tokenAgents).length <= 5\\n\\t\\t\\t, \\\"max 5 agents at deployment\\\");\\n\\t\\trequire((_tokenDetails.complianceModules).length <= 30\\n\\t\\t\\t, \\\"max 30 module actions at deployment\\\");\\n\\t\\trequire((_tokenDetails.complianceModules).length >= (_tokenDetails.complianceSettings).length\\n\\t\\t\\t, \\\"invalid compliance pattern\\\");\\n\\n\\t\\tITrustedIssuersRegistry tir = ITrustedIssuersRegistry(_deployTIR(_salt, _implementationAuthority));\\n\\t\\tIClaimTopicsRegistry ctr = IClaimTopicsRegistry(_deployCTR(_salt, _implementationAuthority));\\n\\t\\tIModularCompliance mc = IModularCompliance(_deployMC(_salt, _implementationAuthority));\\n\\t\\tIIdentityRegistryStorage irs;\\n\\t\\tif (_tokenDetails.irs == address(0)) {\\n\\t\\t\\tirs = IIdentityRegistryStorage(_deployIRS(_salt, _implementationAuthority));\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tirs = IIdentityRegistryStorage(_tokenDetails.irs);\\n\\t\\t}\\n\\t\\tIIdentityRegistry ir = IIdentityRegistry(_deployIR(_salt, _implementationAuthority, address(tir),\\n\\t\\t\\taddress(ctr), address(irs)));\\n\\t\\tIToken token = IToken(_deployToken\\n\\t\\t(\\n\\t\\t\\t_salt,\\n\\t\\t\\t_implementationAuthority,\\n\\t\\t\\taddress(ir),\\n\\t\\t\\taddress(mc),\\n\\t\\t\\t_tokenDetails.name,\\n\\t\\t\\t_tokenDetails.symbol,\\n\\t\\t\\t_tokenDetails.decimals,\\n\\t\\t\\t_tokenDetails.ONCHAINID\\n\\t\\t));\\n\\t\\tfor (uint256 i = 0; i < (_claimDetails.claimTopics).length; i++) {\\n\\t\\t\\tctr.addClaimTopic(_claimDetails.claimTopics[i]);\\n\\t\\t}\\n\\t\\tfor (uint256 i = 0; i < (_claimDetails.issuers).length; i++) {\\n\\t\\t\\ttir.addTrustedIssuer(IClaimIssuer((_claimDetails).issuers[i]), _claimDetails.issuerClaims[i]);\\n\\t\\t}\\n\\t\\tirs.bindIdentityRegistry(address(ir));\\n\\t\\tAgentRole(address(ir)).addAgent(address(token));\\n\\t\\tfor (uint256 i = 0; i < (_tokenDetails.irAgents).length; i++) {\\n\\t\\t\\tAgentRole(address(ir)).addAgent(_tokenDetails.irAgents[i]);\\n\\t\\t}\\n\\t\\tfor (uint256 i = 0; i < (_tokenDetails.tokenAgents).length; i++) {\\n\\t\\t\\tAgentRole(address(token)).addAgent(_tokenDetails.tokenAgents[i]);\\n\\t\\t}\\n\\t\\tfor (uint256 i = 0; i < (_tokenDetails.complianceModules).length; i++) {\\n\\t\\t\\tif (!mc.isModuleBound(_tokenDetails.complianceModules[i])) {\\n\\t\\t\\t\\tmc.addModule(_tokenDetails.complianceModules[i]);\\n\\t\\t\\t}\\n\\t\\t\\tif (i < (_tokenDetails.complianceSettings).length) {\\n\\t\\t\\t\\tmc.callModuleFunction(_tokenDetails.complianceSettings[i], _tokenDetails.complianceModules[i]);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\ttokenDeployed[_salt] = address(token);\\n\\t\\t(Ownable(address(token))).transferOwnership(_tokenDetails.owner);\\n\\t\\t(Ownable(address(ir))).transferOwnership(_tokenDetails.owner);\\n\\t\\t(Ownable(address(tir))).transferOwnership(_tokenDetails.owner);\\n\\t\\t(Ownable(address(ctr))).transferOwnership(_tokenDetails.owner);\\n\\t\\t(Ownable(address(mc))).transferOwnership(_tokenDetails.owner);\\n\\t\\temit TREXSuiteDeployed(address(token), address(ir), address(irs), address(tir), address(ctr), address(mc), _salt);\\n\\t}\\n\\n\\t/**\\n     *  @dev See {ITREXFactory-recoverContractOwnership}.\\n     */\\n\\tfunction recoverContractOwnership(address _contract, address _newOwner) external override onlyOwner {\\n\\t\\t(Ownable(_contract)).transferOwnership(_newOwner);\\n\\t}\\n\\n\\t/**\\n     *  @dev See {ITREXFactory-getImplementationAuthority}.\\n     */\\n\\tfunction getImplementationAuthority() external override view returns(address) {\\n\\t\\treturn _implementationAuthority;\\n\\t}\\n\\n\\t/**\\n     *  @dev See {ITREXFactory-getToken}.\\n     */\\n\\tfunction getToken(string calldata _salt) external override view returns(address) {\\n\\t\\treturn tokenDeployed[_salt];\\n\\t}\\n\\n\\t/**\\n     *  @dev See {ITREXFactory-setImplementationAuthority}.\\n     */\\n\\tfunction setImplementationAuthority(address implementationAuthority_) public override onlyOwner {\\n\\t\\trequire(implementationAuthority_ != address(0), \\\"invalid argument - zero address\\\");\\n\\t\\t// should not be possible to set an implementation authority that is not complete\\n\\t\\trequire(\\n\\t\\t\\t(ITREXImplementationAuthority(implementationAuthority_)).getTokenImplementation() != address(0)\\n\\t\\t\\t&& (ITREXImplementationAuthority(implementationAuthority_)).getCTRImplementation() != address(0)\\n\\t\\t\\t&& (ITREXImplementationAuthority(implementationAuthority_)).getIRImplementation() != address(0)\\n\\t\\t\\t&& (ITREXImplementationAuthority(implementationAuthority_)).getIRSImplementation() != address(0)\\n\\t\\t\\t&& (ITREXImplementationAuthority(implementationAuthority_)).getMCImplementation() != address(0)\\n\\t\\t\\t&& (ITREXImplementationAuthority(implementationAuthority_)).getTIRImplementation() != address(0),\\n\\t\\t\\t\\\"invalid Implementation Authority\\\");\\n\\t\\t_implementationAuthority = implementationAuthority_;\\n\\t\\temit ImplementationAuthoritySet(implementationAuthority_);\\n\\t}\\n\\n\\t/// deploy function with create2 opcode call\\n\\t/// returns the address of the contract created\\n\\tfunction _deploy(string memory salt, bytes memory bytecode) private returns (address) {\\n\\t\\tbytes32 saltBytes = bytes32(keccak256(abi.encodePacked(salt)));\\n\\t\\taddress addr;\\n\\t\\t// solhint-disable-next-line no-inline-assembly\\n\\t\\tassembly {\\n\\t\\t\\tlet encoded_data := add(0x20, bytecode) // load initialization code.\\n\\t\\t\\tlet encoded_size := mload(bytecode)     // load init code's length.\\n\\t\\t\\taddr := create2(0, encoded_data, encoded_size, saltBytes)\\n\\t\\t\\tif iszero(extcodesize(addr)) {\\n\\t\\t\\t\\trevert(0, 0)\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\temit Deployed(addr);\\n\\t\\treturn addr;\\n\\t}\\n\\n\\t/// function used to deploy a trusted issuers registry using CREATE2\\n\\tfunction _deployTIR\\n\\t(\\n\\t\\tstring memory _salt,\\n\\t\\taddress implementationAuthority_\\n\\t) private returns (address){\\n\\t\\tbytes memory _code = type(TrustedIssuersRegistryProxy).creationCode;\\n\\t\\tbytes memory _constructData = abi.encode(implementationAuthority_);\\n\\t\\tbytes memory bytecode = abi.encodePacked(_code, _constructData);\\n\\t\\treturn _deploy(_salt, bytecode);\\n\\t}\\n\\n\\t/// function used to deploy a claim topics registry using CREATE2\\n\\tfunction  _deployCTR\\n\\t(\\n\\t\\tstring memory _salt,\\n\\t\\taddress implementationAuthority_\\n\\t) private returns (address) {\\n\\t\\tbytes memory _code = type(ClaimTopicsRegistryProxy).creationCode;\\n\\t\\tbytes memory _constructData = abi.encode(implementationAuthority_);\\n\\t\\tbytes memory bytecode = abi.encodePacked(_code, _constructData);\\n\\t\\treturn _deploy(_salt, bytecode);\\n\\t}\\n\\n\\t/// function used to deploy modular compliance contract using CREATE2\\n\\tfunction  _deployMC\\n\\t(\\n\\t\\tstring memory _salt,\\n\\t\\taddress implementationAuthority_\\n\\t) private returns (address) {\\n\\t\\tbytes memory _code = type(ModularComplianceProxy).creationCode;\\n\\t\\tbytes memory _constructData = abi.encode(implementationAuthority_);\\n\\t\\tbytes memory bytecode = abi.encodePacked(_code, _constructData);\\n\\t\\treturn _deploy(_salt, bytecode);\\n\\t}\\n\\n\\t/// function used to deploy an identity registry storage using CREATE2\\n\\tfunction _deployIRS\\n\\t(\\n\\t\\tstring memory _salt,\\n\\t\\taddress implementationAuthority_\\n\\t) private returns (address) {\\n\\t\\tbytes memory _code = type(IdentityRegistryStorageProxy).creationCode;\\n\\t\\tbytes memory _constructData = abi.encode(implementationAuthority_);\\n\\t\\tbytes memory bytecode = abi.encodePacked(_code, _constructData);\\n\\t\\treturn _deploy(_salt, bytecode);\\n\\t}\\n\\n\\t/// function used to deploy an identity registry using CREATE2\\n\\tfunction _deployIR\\n\\t(\\n\\t\\tstring memory _salt,\\n\\t\\taddress implementationAuthority_,\\n\\t\\taddress _trustedIssuersRegistry,\\n\\t\\taddress _claimTopicsRegistry,\\n\\t\\taddress _identityStorage\\n\\t) private returns (address) {\\n\\t\\tbytes memory _code = type(IdentityRegistryProxy).creationCode;\\n\\t\\tbytes memory _constructData = abi.encode\\n\\t\\t(\\n\\t\\t\\timplementationAuthority_,\\n\\t\\t\\t_trustedIssuersRegistry,\\n\\t\\t\\t_claimTopicsRegistry,\\n\\t\\t\\t_identityStorage\\n\\t\\t);\\n\\t\\tbytes memory bytecode = abi.encodePacked(_code, _constructData);\\n\\t\\treturn _deploy(_salt, bytecode);\\n\\t}\\n\\n\\t/// function used to deploy a token using CREATE2\\n\\tfunction _deployToken\\n\\t(\\n\\t\\tstring memory _salt,\\n\\t\\taddress implementationAuthority_,\\n\\t\\taddress _identityRegistry,\\n\\t\\taddress _compliance,\\n\\t\\tstring memory _name,\\n\\t\\tstring memory _symbol,\\n\\t\\tuint8 _decimals,\\n\\t\\taddress _onchainId\\n\\t) private returns (address) {\\n\\t\\tbytes memory _code = type(TokenProxy).creationCode;\\n\\t\\tbytes memory _constructData = abi.encode\\n\\t\\t(\\n\\t\\t\\timplementationAuthority_,\\n\\t\\t\\t_identityRegistry,\\n\\t\\t\\t_compliance,\\n\\t\\t\\t_name,\\n\\t\\t\\t_symbol,\\n\\t\\t\\t_decimals,\\n\\t\\t\\t_onchainId\\n\\t\\t);\\n\\t\\tbytes memory bytecode = abi.encodePacked(_code, _constructData);\\n\\t\\treturn _deploy(_salt, bytecode);\\n\\t}\\n}\\n\",\"keccak256\":\"0x61b7e696998e35395413682ca39558b462c64111973edba95451be924fae0d2f\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "deployTREXSuite(string,(address,string,string,uint8,address,address,address[],address[],address[],bytes[]),(uint256[],address[],uint256[][]))": {
        "details": "See {ITREXFactory-deployTREXSuite}."
      },
      "getImplementationAuthority()": {
        "details": "See {ITREXFactory-getImplementationAuthority}."
      },
      "getToken(string)": {
        "details": "See {ITREXFactory-getToken}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "recoverContractOwnership(address,address)": {
        "details": "See {ITREXFactory-recoverContractOwnership}."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setImplementationAuthority(address)": {
        "details": "See {ITREXFactory-setImplementationAuthority}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "Deployed(address)": {
        "notice": "event emitted whenever a single contract is deployed by the factory"
      },
      "ImplementationAuthoritySet(address)": {
        "notice": "event emitted when the implementation authority of the factory contract is set"
      },
      "TREXSuiteDeployed(address,address,address,address,address,address,string)": {
        "notice": "event emitted by the factory when a full suite of T-REX contracts is deployed"
      }
    },
    "kind": "user",
    "methods": {
      "tokenDeployed(string)": {
        "notice": "mapping containing info about the token contracts corresponding to salt already used for CREATE2 deployments"
      }
    },
    "notice": "NOTICE     The T-REX software is licensed under a proprietary license or the GPL v.3.     If you choose to receive it under the GPL v.3 license, the following applies:     T-REX is a suite of smart contracts developed by Tokeny to manage and transfer financial assets on the ethereum blockchain     Copyright (C) 2022, Tokeny sàrl.     This program is free software: you can redistribute it and/or modify     it under the terms of the GNU General Public License as published by     the Free Software Foundation, either version 3 of the License, or     (at your option) any later version.     This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU General Public License for more details.     You should have received a copy of the GNU General Public License     along with this program.  If not, see <https://www.gnu.org/licenses/>.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8195,
        "contract": "contracts/TREXFactory.sol:TREXFactory",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 11143,
        "contract": "contracts/TREXFactory.sol:TREXFactory",
        "label": "_implementationAuthority",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 11148,
        "contract": "contracts/TREXFactory.sol:TREXFactory",
        "label": "tokenDeployed",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_string_memory_ptr,t_address)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}