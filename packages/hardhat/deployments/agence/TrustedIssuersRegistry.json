{
  "address": "0x5cBb275b6c101C274f058Fb20d0B2bC3645B13CF",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IClaimIssuer",
          "name": "trustedIssuer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "claimTopics",
          "type": "uint256[]"
        }
      ],
      "name": "ClaimTopicsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IClaimIssuer",
          "name": "trustedIssuer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "claimTopics",
          "type": "uint256[]"
        }
      ],
      "name": "TrustedIssuerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IClaimIssuer",
          "name": "trustedIssuer",
          "type": "address"
        }
      ],
      "name": "TrustedIssuerRemoved",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "contract IClaimIssuer",
          "name": "_trustedIssuer",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_claimTopics",
          "type": "uint256[]"
        }
      ],
      "name": "addTrustedIssuer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IClaimIssuer",
          "name": "_trustedIssuer",
          "type": "address"
        }
      ],
      "name": "getTrustedIssuerClaimTopics",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTrustedIssuers",
      "outputs": [
        {
          "internalType": "contract IClaimIssuer[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "claimTopic",
          "type": "uint256"
        }
      ],
      "name": "getTrustedIssuersForClaimTopic",
      "outputs": [
        {
          "internalType": "contract IClaimIssuer[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_issuer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_claimTopic",
          "type": "uint256"
        }
      ],
      "name": "hasClaimTopic",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_issuer",
          "type": "address"
        }
      ],
      "name": "isTrustedIssuer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IClaimIssuer",
          "name": "_trustedIssuer",
          "type": "address"
        }
      ],
      "name": "removeTrustedIssuer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IClaimIssuer",
          "name": "_trustedIssuer",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_claimTopics",
          "type": "uint256[]"
        }
      ],
      "name": "updateIssuerClaimTopics",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x1bb6c7ea17f8eaa16f698fca5e397433db892be1fbe0e7085454f6ae0e2b0657",
  "receipt": {
    "to": null,
    "from": "0xfC10126E2F41cbB264BceEE6c6093133AA45f317",
    "contractAddress": "0x5cBb275b6c101C274f058Fb20d0B2bC3645B13CF",
    "transactionIndex": 0,
    "gasUsed": "1176172",
    "logsBloom": "0x
    "blockHash": "0xcc2f9bce496cb09cc26e8ac1c5cc17d2e66ade3a22cb84ffa1aa7b63da7d38e4",
    "transactionHash": "0x1bb6c7ea17f8eaa16f698fca5e397433db892be1fbe0e7085454f6ae0e2b0657",
    "logs": [],
    "blockNumber": 12752986,
    "cumulativeGasUsed": "1176172",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "f69367090d7184c7f33f2a160d9a791d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IClaimIssuer\",\"name\":\"trustedIssuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"ClaimTopicsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IClaimIssuer\",\"name\":\"trustedIssuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"TrustedIssuerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IClaimIssuer\",\"name\":\"trustedIssuer\",\"type\":\"address\"}],\"name\":\"TrustedIssuerRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"addTrustedIssuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"}],\"name\":\"getTrustedIssuerClaimTopics\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTrustedIssuers\",\"outputs\":[{\"internalType\":\"contract IClaimIssuer[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"}],\"name\":\"getTrustedIssuersForClaimTopic\",\"outputs\":[{\"internalType\":\"contract IClaimIssuer[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_claimTopic\",\"type\":\"uint256\"}],\"name\":\"hasClaimTopic\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"}],\"name\":\"isTrustedIssuer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"}],\"name\":\"removeTrustedIssuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"updateIssuerClaimTopics\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addTrustedIssuer(address,uint256[])\":{\"details\":\"See {ITrustedIssuersRegistry-addTrustedIssuer}.\"},\"getTrustedIssuerClaimTopics(address)\":{\"details\":\"See {ITrustedIssuersRegistry-getTrustedIssuerClaimTopics}.\"},\"getTrustedIssuers()\":{\"details\":\"See {ITrustedIssuersRegistry-getTrustedIssuers}.\"},\"getTrustedIssuersForClaimTopic(uint256)\":{\"details\":\"See {ITrustedIssuersRegistry-getTrustedIssuersForClaimTopic}.\"},\"hasClaimTopic(address,uint256)\":{\"details\":\"See {ITrustedIssuersRegistry-hasClaimTopic}.\"},\"isTrustedIssuer(address)\":{\"details\":\"See {ITrustedIssuersRegistry-isTrustedIssuer}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeTrustedIssuer(address)\":{\"details\":\"See {ITrustedIssuersRegistry-removeTrustedIssuer}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateIssuerClaimTopics(address,uint256[])\":{\"details\":\"See {ITrustedIssuersRegistry-updateIssuerClaimTopics}.\"}},\"version\":1},\"userdoc\":{\"events\":{\"ClaimTopicsUpdated(address,uint256[])\":{\"notice\":\"this event is emitted when the set of claim topics is changed for a given trusted issuer.  the event is emitted by the updateIssuerClaimTopics function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract  `claimTopics` is the set of claims that the trusted issuer is allowed to emit\"},\"TrustedIssuerAdded(address,uint256[])\":{\"notice\":\"this event is emitted when a trusted issuer is added in the registry.  the event is emitted by the addTrustedIssuer function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract  `claimTopics` is the set of claims that the trusted issuer is allowed to emit\"},\"TrustedIssuerRemoved(address)\":{\"notice\":\"this event is emitted when a trusted issuer is removed from the registry.  the event is emitted by the removeTrustedIssuer function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"NOTICE     The T-REX software is licensed under a proprietary license or the GPL v.3.     If you choose to receive it under the GPL v.3 license, the following applies:     T-REX is a suite of smart contracts implementing the ERC-3643 standard and     developed by Tokeny to manage and transfer financial assets on EVM blockchains     Copyright (C) 2023, Tokeny s\\u00e0rl.     This program is free software: you can redistribute it and/or modify     it under the terms of the GNU General Public License as published by     the Free Software Foundation, either version 3 of the License, or     (at your option) any later version.     This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU General Public License for more details.     You should have received a copy of the GNU General Public License     along with this program.  If not, see <https://www.gnu.org/licenses/>.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TrustedIssuersRegistry.sol\":\"TrustedIssuersRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TrustedIssuersRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.17;\\n\\n// Sources flattened with hardhat v2.14.0 https://hardhat.org\\n\\n// File @onchain-id/solidity/contracts/interface/IERC734.sol@v2.1.0\\n\\n/**\\n * @dev interface of the ERC734 (Key Holder) standard as defined in the EIP.\\n */\\ninterface IERC734 {\\n\\n    /**\\n     * @dev Emitted when an execution request was approved.\\n     *\\n     * Specification: MUST be triggered when approve was successfully called.\\n     */\\n    event Approved(uint256 indexed executionId, bool approved);\\n\\n    /**\\n     * @dev Emitted when an execute operation was approved and successfully performed.\\n     *\\n     * Specification: MUST be triggered when approve was called and the execution was successfully approved.\\n     */\\n    event Executed(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\\n\\n    /**\\n     * @dev Emitted when an execution request was performed via `execute`.\\n     *\\n     * Specification: MUST be triggered when execute was successfully called.\\n     */\\n    event ExecutionRequested(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\\n\\n    /**\\n     * @dev Emitted when an execute operation was called and failed\\n     *\\n     * Specification: MUST be triggered when execute call failed\\n     */\\n    event ExecutionFailed(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\\n\\n    /**\\n     * @dev Emitted when a key was added to the Identity.\\n     *\\n     * Specification: MUST be triggered when addKey was successfully called.\\n     */\\n    event KeyAdded(bytes32 indexed key, uint256 indexed purpose, uint256 indexed keyType);\\n\\n    /**\\n     * @dev Emitted when a key was removed from the Identity.\\n     *\\n     * Specification: MUST be triggered when removeKey was successfully called.\\n     */\\n    event KeyRemoved(bytes32 indexed key, uint256 indexed purpose, uint256 indexed keyType);\\n\\n    /**\\n     * @dev Adds a _key to the identity. The _purpose specifies the purpose of the key.\\n     *\\n     * Triggers Event: `KeyAdded`\\n     *\\n     * Specification: MUST only be done by keys of purpose 1, or the identity\\n     * itself. If it's the identity itself, the approval process will determine its approval.\\n     */\\n    function addKey(bytes32 _key, uint256 _purpose, uint256 _keyType) external returns (bool success);\\n\\n    /**\\n    * @dev Approves an execution.\\n    *\\n    * Triggers Event: `Approved`\\n    * Triggers on execution successful Event: `Executed`\\n    * Triggers on execution failure Event: `ExecutionFailed`\\n    */\\n    function approve(uint256 _id, bool _approve) external returns (bool success);\\n\\n    /**\\n     * @dev Removes _purpose for _key from the identity.\\n     *\\n     * Triggers Event: `KeyRemoved`\\n     *\\n     * Specification: MUST only be done by keys of purpose 1, or the identity itself.\\n     * If it's the identity itself, the approval process will determine its approval.\\n     */\\n    function removeKey(bytes32 _key, uint256 _purpose) external returns (bool success);\\n\\n    /**\\n     * @dev Passes an execution instruction to an ERC734 identity.\\n     * How the execution is handled is up to the identity implementation:\\n     * An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to\\n     * approve this execution.\\n     * Execute COULD be used as the only accessor for `addKey` and `removeKey`.\\n     *\\n     * Triggers Event: ExecutionRequested\\n     * Triggers on direct execution Event: Executed\\n     */\\n    function execute(address _to, uint256 _value, bytes calldata _data) external payable returns (uint256 executionId);\\n\\n    /**\\n     * @dev Returns the full key data, if present in the identity.\\n     */\\n    function getKey(bytes32 _key) external view returns (uint256[] memory purposes, uint256 keyType, bytes32 key);\\n\\n    /**\\n     * @dev Returns the list of purposes associated with a key.\\n     */\\n    function getKeyPurposes(bytes32 _key) external view returns(uint256[] memory _purposes);\\n\\n    /**\\n     * @dev Returns an array of public key bytes32 held by this identity.\\n     */\\n    function getKeysByPurpose(uint256 _purpose) external view returns (bytes32[] memory keys);\\n\\n    /**\\n     * @dev Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\\n     */\\n    function keyHasPurpose(bytes32 _key, uint256 _purpose) external view returns (bool exists);\\n}\\n\\n// File @onchain-id/solidity/contracts/interface/IERC735.sol@v2.1.0\\n\\n/**\\n * @dev interface of the ERC735 (Claim Holder) standard as defined in the EIP.\\n */\\ninterface IERC735 {\\n\\n    /**\\n     * @dev Emitted when a claim was added.\\n     *\\n     * Specification: MUST be triggered when a claim was successfully added.\\n     */\\n    event ClaimAdded(\\n        bytes32 indexed claimId,\\n        uint256 indexed topic,\\n        uint256 scheme,\\n        address indexed issuer,\\n        bytes signature,\\n        bytes data,\\n        string uri);\\n\\n    /**\\n     * @dev Emitted when a claim was removed.\\n     *\\n     * Specification: MUST be triggered when removeClaim was successfully called.\\n     */\\n    event ClaimRemoved(\\n        bytes32 indexed claimId,\\n        uint256 indexed topic,\\n        uint256 scheme,\\n        address indexed issuer,\\n        bytes signature,\\n        bytes data,\\n        string uri);\\n\\n    /**\\n     * @dev Emitted when a claim was changed.\\n     *\\n     * Specification: MUST be triggered when addClaim was successfully called on an existing claimId.\\n     */\\n    event ClaimChanged(\\n        bytes32 indexed claimId,\\n        uint256 indexed topic,\\n        uint256 scheme,\\n        address indexed issuer,\\n        bytes signature,\\n        bytes data,\\n        string uri);\\n\\n    /**\\n     * @dev Add or update a claim.\\n     *\\n     * Triggers Event: `ClaimAdded`, `ClaimChanged`\\n     *\\n     * Specification: Add or update a claim from an issuer.\\n     *\\n     * _signature is a signed message of the following structure:\\n     * `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`.\\n     * Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\\n     */\\n    function addClaim(\\n        uint256 _topic,\\n        uint256 _scheme,\\n        address issuer,\\n        bytes calldata _signature,\\n        bytes calldata _data,\\n        string calldata _uri)\\n    external returns (bytes32 claimRequestId);\\n\\n    /**\\n     * @dev Removes a claim.\\n     *\\n     * Triggers Event: `ClaimRemoved`\\n     *\\n     * Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\\n     */\\n    function removeClaim(bytes32 _claimId) external returns (bool success);\\n\\n    /**\\n     * @dev Get a claim by its ID.\\n     *\\n     * Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\\n     */\\n    function getClaim(bytes32 _claimId)\\n    external view returns(\\n        uint256 topic,\\n        uint256 scheme,\\n        address issuer,\\n        bytes memory signature,\\n        bytes memory data,\\n        string memory uri);\\n\\n    /**\\n     * @dev Returns an array of claim IDs by topic.\\n     */\\n    function getClaimIdsByTopic(uint256 _topic) external view returns(bytes32[] memory claimIds);\\n}\\n\\n// File @onchain-id/solidity/contracts/interface/IIdentity.sol@v2.1.0\\n\\n// solhint-disable-next-line no-empty-blocks\\ninterface IIdentity is IERC734, IERC735 {}\\n\\n// File @onchain-id/solidity/contracts/interface/IClaimIssuer.sol@v2.1.0\\n\\ninterface IClaimIssuer is IIdentity {\\n\\n    /**\\n     * @dev Emitted when a claim is revoked.\\n     *\\n     * Specification: MUST be triggered when revoking a claim.\\n     */\\n    event ClaimRevoked(bytes indexed signature);\\n\\n    /**\\n     * @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\\n     * @notice will fetch the claim from the identity contract (unsafe).\\n     * @param _claimId the id of the claim\\n     * @param _identity the address of the identity contract\\n     * @return isRevoked true when the claim is revoked\\n     */\\n    function revokeClaim(bytes32 _claimId, address _identity) external returns(bool);\\n\\n    /**\\n     * @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\\n     * @param signature the signature of the claim\\n     */\\n    function revokeClaimBySignature(bytes calldata signature) external;\\n\\n    /**\\n     * @dev Returns revocation status of a claim.\\n     * @param _sig the signature of the claim\\n     * @return isRevoked true if the claim is revoked and false otherwise\\n     */\\n    function isClaimRevoked(bytes calldata _sig) external view returns (bool);\\n\\n    /**\\n     * @dev Checks if a claim is valid.\\n     * @param _identity the identity contract related to the claim\\n     * @param claimTopic the claim topic of the claim\\n     * @param sig the signature of the claim\\n     * @param data the data field of the claim\\n     * @return claimValid true if the claim is valid, false otherwise\\n     */\\n    function isClaimValid(\\n        IIdentity _identity,\\n        uint256 claimTopic,\\n        bytes calldata sig,\\n        bytes calldata data)\\n    external view returns (bool);\\n\\n    /**\\n     * @dev returns the address that signed the given data\\n     * @param sig the signature of the data\\n     * @param dataHash the data that was signed\\n     * returns the address that signed dataHash and created the signature sig\\n     */\\n    function getRecoveredAddress(bytes calldata sig, bytes32 dataHash) external pure returns (address);\\n}\\n\\n// File @openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol@v4.9.3\\n\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\\n// File @openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol@v4.9.3\\n\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\\n// File @openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol@v4.9.3\\n\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\\n// File @openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol@v4.9.3\\n\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\\n// File contracts/registry/interface/ITrustedIssuersRegistry.sol\\n\\n//\\n//                                             :+#####%%%%%%%%%%%%%%+\\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\\n//                                          +@@@@@. =@@@=  .+@@@@@*:\\n//                                          #@@@@#:%@@#. :*@@@@#-\\n//                                          @@@@@%@@@= :#@@@@+.\\n//                                         :@@@@@@@#.:#@@@%-\\n//                                         +@@@@@@-.*@@@*:\\n//                                         #@@@@#.=@@@+.\\n//                                         @@@@+-%@%=\\n//                                        :@@@#%@%=\\n//                                        +@@@@%-\\n//                                        :#%%=\\n//\\n\\n/**\\n *     NOTICE\\n *\\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\\n *     If you choose to receive it under the GPL v.3 license, the following applies:\\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\\n *\\n *     Copyright (C) 2023, Tokeny s\\u00e0rl.\\n *\\n *     This program is free software: you can redistribute it and/or modify\\n *     it under the terms of the GNU General Public License as published by\\n *     the Free Software Foundation, either version 3 of the License, or\\n *     (at your option) any later version.\\n *\\n *     This program is distributed in the hope that it will be useful,\\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n *     GNU General Public License for more details.\\n *\\n *     You should have received a copy of the GNU General Public License\\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\ninterface ITrustedIssuersRegistry {\\n    /**\\n     *  this event is emitted when a trusted issuer is added in the registry.\\n     *  the event is emitted by the addTrustedIssuer function\\n     *  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract\\n     *  `claimTopics` is the set of claims that the trusted issuer is allowed to emit\\n     */\\n    event TrustedIssuerAdded(IClaimIssuer indexed trustedIssuer, uint256[] claimTopics);\\n\\n    /**\\n     *  this event is emitted when a trusted issuer is removed from the registry.\\n     *  the event is emitted by the removeTrustedIssuer function\\n     *  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract\\n     */\\n    event TrustedIssuerRemoved(IClaimIssuer indexed trustedIssuer);\\n\\n    /**\\n     *  this event is emitted when the set of claim topics is changed for a given trusted issuer.\\n     *  the event is emitted by the updateIssuerClaimTopics function\\n     *  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract\\n     *  `claimTopics` is the set of claims that the trusted issuer is allowed to emit\\n     */\\n    event ClaimTopicsUpdated(IClaimIssuer indexed trustedIssuer, uint256[] claimTopics);\\n\\n    /**\\n     *  @dev registers a ClaimIssuer contract as trusted claim issuer.\\n     *  Requires that a ClaimIssuer contract doesn't already exist\\n     *  Requires that the claimTopics set is not empty\\n     *  Requires that there is no more than 15 claimTopics\\n     *  Requires that there is no more than 50 Trusted issuers\\n     *  @param _trustedIssuer The ClaimIssuer contract address of the trusted claim issuer.\\n     *  @param _claimTopics the set of claim topics that the trusted issuer is allowed to emit\\n     *  This function can only be called by the owner of the Trusted Issuers Registry contract\\n     *  emits a `TrustedIssuerAdded` event\\n     */\\n    function addTrustedIssuer(IClaimIssuer _trustedIssuer, uint256[] calldata _claimTopics) external;\\n\\n    /**\\n     *  @dev Removes the ClaimIssuer contract of a trusted claim issuer.\\n     *  Requires that the claim issuer contract to be registered first\\n     *  @param _trustedIssuer the claim issuer to remove.\\n     *  This function can only be called by the owner of the Trusted Issuers Registry contract\\n     *  emits a `TrustedIssuerRemoved` event\\n     */\\n    function removeTrustedIssuer(IClaimIssuer _trustedIssuer) external;\\n\\n    /**\\n     *  @dev Updates the set of claim topics that a trusted issuer is allowed to emit.\\n     *  Requires that this ClaimIssuer contract already exists in the registry\\n     *  Requires that the provided claimTopics set is not empty\\n     *  Requires that there is no more than 15 claimTopics\\n     *  @param _trustedIssuer the claim issuer to update.\\n     *  @param _claimTopics the set of claim topics that the trusted issuer is allowed to emit\\n     *  This function can only be called by the owner of the Trusted Issuers Registry contract\\n     *  emits a `ClaimTopicsUpdated` event\\n     */\\n    function updateIssuerClaimTopics(IClaimIssuer _trustedIssuer, uint256[] calldata _claimTopics) external;\\n\\n    /**\\n     *  @dev Function for getting all the trusted claim issuers stored.\\n     *  @return array of all claim issuers registered.\\n     */\\n    function getTrustedIssuers() external view returns (IClaimIssuer[] memory);\\n\\n    /**\\n     *  @dev Function for getting all the trusted issuer allowed for a given claim topic.\\n     *  @param claimTopic the claim topic to get the trusted issuers for.\\n     *  @return array of all claim issuer addresses that are allowed for the given claim topic.\\n     */\\n    function getTrustedIssuersForClaimTopic(uint256 claimTopic) external view returns (IClaimIssuer[] memory);\\n\\n    /**\\n     *  @dev Checks if the ClaimIssuer contract is trusted\\n     *  @param _issuer the address of the ClaimIssuer contract\\n     *  @return true if the issuer is trusted, false otherwise.\\n     */\\n    function isTrustedIssuer(address _issuer) external view returns (bool);\\n\\n    /**\\n     *  @dev Function for getting all the claim topic of trusted claim issuer\\n     *  Requires the provided ClaimIssuer contract to be registered in the trusted issuers registry.\\n     *  @param _trustedIssuer the trusted issuer concerned.\\n     *  @return The set of claim topics that the trusted issuer is allowed to emit\\n     */\\n    function getTrustedIssuerClaimTopics(IClaimIssuer _trustedIssuer) external view returns (uint256[] memory);\\n\\n    /**\\n     *  @dev Function for checking if the trusted claim issuer is allowed\\n     *  to emit a certain claim topic\\n     *  @param _issuer the address of the trusted issuer's ClaimIssuer contract\\n     *  @param _claimTopic the Claim Topic that has to be checked to know if the `issuer` is allowed to emit it\\n     *  @return true if the issuer is trusted for this claim topic.\\n     */\\n    function hasClaimTopic(address _issuer, uint256 _claimTopic) external view returns (bool);\\n}\\n\\n// File contracts/registry/storage/TIRStorage.sol\\n\\n//\\n//                                             :+#####%%%%%%%%%%%%%%+\\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\\n//                                          +@@@@@. =@@@=  .+@@@@@*:\\n//                                          #@@@@#:%@@#. :*@@@@#-\\n//                                          @@@@@%@@@= :#@@@@+.\\n//                                         :@@@@@@@#.:#@@@%-\\n//                                         +@@@@@@-.*@@@*:\\n//                                         #@@@@#.=@@@+.\\n//                                         @@@@+-%@%=\\n//                                        :@@@#%@%=\\n//                                        +@@@@%-\\n//                                        :#%%=\\n//\\n\\n/**\\n *     NOTICE\\n *\\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\\n *     If you choose to receive it under the GPL v.3 license, the following applies:\\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\\n *\\n *     Copyright (C) 2023, Tokeny s\\u00e0rl.\\n *\\n *     This program is free software: you can redistribute it and/or modify\\n *     it under the terms of the GNU General Public License as published by\\n *     the Free Software Foundation, either version 3 of the License, or\\n *     (at your option) any later version.\\n *\\n *     This program is distributed in the hope that it will be useful,\\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n *     GNU General Public License for more details.\\n *\\n *     You should have received a copy of the GNU General Public License\\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\ncontract TIRStorage {\\n    /// @dev Array containing all TrustedIssuers identity contract address.\\n    IClaimIssuer[] internal _trustedIssuers;\\n\\n    /// @dev Mapping between a trusted issuer address and its corresponding claimTopics.\\n    mapping(address => uint256[]) internal _trustedIssuerClaimTopics;\\n\\n    /// @dev Mapping between a claim topic and the allowed trusted issuers for it.\\n    mapping(uint256 => IClaimIssuer[]) internal _claimTopicsToTrustedIssuers;\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     */\\n    uint256[49] private __gap;\\n}\\n\\n// File contracts/registry/implementation/TrustedIssuersRegistry.sol\\n\\n//\\n//                                             :+#####%%%%%%%%%%%%%%+\\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\\n//                                          +@@@@@. =@@@=  .+@@@@@*:\\n//                                          #@@@@#:%@@#. :*@@@@#-\\n//                                          @@@@@%@@@= :#@@@@+.\\n//                                         :@@@@@@@#.:#@@@%-\\n//                                         +@@@@@@-.*@@@*:\\n//                                         #@@@@#.=@@@+.\\n//                                         @@@@+-%@%=\\n//                                        :@@@#%@%=\\n//                                        +@@@@%-\\n//                                        :#%%=\\n//\\n\\n/**\\n *     NOTICE\\n *\\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\\n *     If you choose to receive it under the GPL v.3 license, the following applies:\\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\\n *\\n *     Copyright (C) 2023, Tokeny s\\u00e0rl.\\n *\\n *     This program is free software: you can redistribute it and/or modify\\n *     it under the terms of the GNU General Public License as published by\\n *     the Free Software Foundation, either version 3 of the License, or\\n *     (at your option) any later version.\\n *\\n *     This program is distributed in the hope that it will be useful,\\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n *     GNU General Public License for more details.\\n *\\n *     You should have received a copy of the GNU General Public License\\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\ncontract TrustedIssuersRegistry is ITrustedIssuersRegistry, OwnableUpgradeable, TIRStorage {\\n\\n    function init() external initializer {\\n        __Ownable_init();\\n    }\\n\\n    /**\\n     *  @dev See {ITrustedIssuersRegistry-addTrustedIssuer}.\\n     */\\n    function addTrustedIssuer(IClaimIssuer _trustedIssuer, uint256[] calldata _claimTopics) external override onlyOwner {\\n        require(address(_trustedIssuer) != address(0), \\\"invalid argument - zero address\\\");\\n        require(_trustedIssuerClaimTopics[address(_trustedIssuer)].length == 0, \\\"trusted Issuer already exists\\\");\\n        require(_claimTopics.length > 0, \\\"trusted claim topics cannot be empty\\\");\\n        require(_claimTopics.length <= 15, \\\"cannot have more than 15 claim topics\\\");\\n        require(_trustedIssuers.length < 50, \\\"cannot have more than 50 trusted issuers\\\");\\n        _trustedIssuers.push(_trustedIssuer);\\n        _trustedIssuerClaimTopics[address(_trustedIssuer)] = _claimTopics;\\n        for (uint256 i = 0; i < _claimTopics.length; i++) {\\n            _claimTopicsToTrustedIssuers[_claimTopics[i]].push(_trustedIssuer);\\n        }\\n        emit TrustedIssuerAdded(_trustedIssuer, _claimTopics);\\n    }\\n\\n    /**\\n     *  @dev See {ITrustedIssuersRegistry-removeTrustedIssuer}.\\n     */\\n    function removeTrustedIssuer(IClaimIssuer _trustedIssuer) external override onlyOwner {\\n        require(address(_trustedIssuer) != address(0), \\\"invalid argument - zero address\\\");\\n        require(_trustedIssuerClaimTopics[address(_trustedIssuer)].length != 0, \\\"NOT a trusted issuer\\\");\\n        uint256 length = _trustedIssuers.length;\\n        for (uint256 i = 0; i < length; i++) {\\n            if (_trustedIssuers[i] == _trustedIssuer) {\\n                _trustedIssuers[i] = _trustedIssuers[length - 1];\\n                _trustedIssuers.pop();\\n                break;\\n            }\\n        }\\n        for (\\n            uint256 claimTopicIndex = 0;\\n            claimTopicIndex < _trustedIssuerClaimTopics[address(_trustedIssuer)].length;\\n            claimTopicIndex++) {\\n            uint256 claimTopic = _trustedIssuerClaimTopics[address(_trustedIssuer)][claimTopicIndex];\\n            uint256 topicsLength = _claimTopicsToTrustedIssuers[claimTopic].length;\\n            for (uint256 i = 0; i < topicsLength; i++) {\\n                if (_claimTopicsToTrustedIssuers[claimTopic][i] == _trustedIssuer) {\\n                    _claimTopicsToTrustedIssuers[claimTopic][i] =\\n                    _claimTopicsToTrustedIssuers[claimTopic][topicsLength - 1];\\n                    _claimTopicsToTrustedIssuers[claimTopic].pop();\\n                    break;\\n                }\\n            }\\n        }\\n        delete _trustedIssuerClaimTopics[address(_trustedIssuer)];\\n        emit TrustedIssuerRemoved(_trustedIssuer);\\n    }\\n\\n    /**\\n     *  @dev See {ITrustedIssuersRegistry-updateIssuerClaimTopics}.\\n     */\\n    function updateIssuerClaimTopics(IClaimIssuer _trustedIssuer, uint256[] calldata _claimTopics) external override onlyOwner {\\n        require(address(_trustedIssuer) != address(0), \\\"invalid argument - zero address\\\");\\n        require(_trustedIssuerClaimTopics[address(_trustedIssuer)].length != 0, \\\"NOT a trusted issuer\\\");\\n        require(_claimTopics.length <= 15, \\\"cannot have more than 15 claim topics\\\");\\n        require(_claimTopics.length > 0, \\\"claim topics cannot be empty\\\");\\n\\n        for (uint256 i = 0; i < _trustedIssuerClaimTopics[address(_trustedIssuer)].length; i++) {\\n            uint256 claimTopic = _trustedIssuerClaimTopics[address(_trustedIssuer)][i];\\n            uint256 topicsLength = _claimTopicsToTrustedIssuers[claimTopic].length;\\n            for (uint256 j = 0; j < topicsLength; j++) {\\n                if (_claimTopicsToTrustedIssuers[claimTopic][j] == _trustedIssuer) {\\n                    _claimTopicsToTrustedIssuers[claimTopic][j] =\\n                    _claimTopicsToTrustedIssuers[claimTopic][topicsLength - 1];\\n                    _claimTopicsToTrustedIssuers[claimTopic].pop();\\n                    break;\\n                }\\n            }\\n        }\\n        _trustedIssuerClaimTopics[address(_trustedIssuer)] = _claimTopics;\\n        for (uint256 i = 0; i < _claimTopics.length; i++) {\\n            _claimTopicsToTrustedIssuers[_claimTopics[i]].push(_trustedIssuer);\\n        }\\n        emit ClaimTopicsUpdated(_trustedIssuer, _claimTopics);\\n    }\\n\\n    /**\\n     *  @dev See {ITrustedIssuersRegistry-getTrustedIssuers}.\\n     */\\n    function getTrustedIssuers() external view override returns (IClaimIssuer[] memory) {\\n        return _trustedIssuers;\\n    }\\n\\n    /**\\n     *  @dev See {ITrustedIssuersRegistry-getTrustedIssuersForClaimTopic}.\\n     */\\n    function getTrustedIssuersForClaimTopic(uint256 claimTopic) external view override returns (IClaimIssuer[] memory) {\\n        return _claimTopicsToTrustedIssuers[claimTopic];\\n    }\\n\\n    /**\\n     *  @dev See {ITrustedIssuersRegistry-isTrustedIssuer}.\\n     */\\n    function isTrustedIssuer(address _issuer) external view override returns (bool) {\\n        if(_trustedIssuerClaimTopics[_issuer].length > 0) {\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n    /**\\n     *  @dev See {ITrustedIssuersRegistry-getTrustedIssuerClaimTopics}.\\n     */\\n    function getTrustedIssuerClaimTopics(IClaimIssuer _trustedIssuer) external view override returns (uint256[] memory) {\\n        require(_trustedIssuerClaimTopics[address(_trustedIssuer)].length != 0, \\\"trusted Issuer doesn\\\\'t exist\\\");\\n        return _trustedIssuerClaimTopics[address(_trustedIssuer)];\\n    }\\n\\n    /**\\n     *  @dev See {ITrustedIssuersRegistry-hasClaimTopic}.\\n     */\\n    function hasClaimTopic(address _issuer, uint256 _claimTopic) external view override returns (bool) {\\n        uint256 length = _trustedIssuerClaimTopics[_issuer].length;\\n        uint256[] memory claimTopics = _trustedIssuerClaimTopics[_issuer];\\n        for (uint256 i = 0; i < length; i++) {\\n            if (claimTopics[i] == _claimTopic) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n}\\n\",\"keccak256\":\"0xc7661a27725bcbcc93c294a1a668a476078c6b0c2912b01a34f17e4b8a88fbcc\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addTrustedIssuer(address,uint256[])": {
        "details": "See {ITrustedIssuersRegistry-addTrustedIssuer}."
      },
      "getTrustedIssuerClaimTopics(address)": {
        "details": "See {ITrustedIssuersRegistry-getTrustedIssuerClaimTopics}."
      },
      "getTrustedIssuers()": {
        "details": "See {ITrustedIssuersRegistry-getTrustedIssuers}."
      },
      "getTrustedIssuersForClaimTopic(uint256)": {
        "details": "See {ITrustedIssuersRegistry-getTrustedIssuersForClaimTopic}."
      },
      "hasClaimTopic(address,uint256)": {
        "details": "See {ITrustedIssuersRegistry-hasClaimTopic}."
      },
      "isTrustedIssuer(address)": {
        "details": "See {ITrustedIssuersRegistry-isTrustedIssuer}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "removeTrustedIssuer(address)": {
        "details": "See {ITrustedIssuersRegistry-removeTrustedIssuer}."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateIssuerClaimTopics(address,uint256[])": {
        "details": "See {ITrustedIssuersRegistry-updateIssuerClaimTopics}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "ClaimTopicsUpdated(address,uint256[])": {
        "notice": "this event is emitted when the set of claim topics is changed for a given trusted issuer.  the event is emitted by the updateIssuerClaimTopics function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract  `claimTopics` is the set of claims that the trusted issuer is allowed to emit"
      },
      "TrustedIssuerAdded(address,uint256[])": {
        "notice": "this event is emitted when a trusted issuer is added in the registry.  the event is emitted by the addTrustedIssuer function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract  `claimTopics` is the set of claims that the trusted issuer is allowed to emit"
      },
      "TrustedIssuerRemoved(address)": {
        "notice": "this event is emitted when a trusted issuer is removed from the registry.  the event is emitted by the removeTrustedIssuer function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract"
      }
    },
    "kind": "user",
    "methods": {},
    "notice": "NOTICE     The T-REX software is licensed under a proprietary license or the GPL v.3.     If you choose to receive it under the GPL v.3 license, the following applies:     T-REX is a suite of smart contracts implementing the ERC-3643 standard and     developed by Tokeny to manage and transfer financial assets on EVM blockchains     Copyright (C) 2023, Tokeny sàrl.     This program is free software: you can redistribute it and/or modify     it under the terms of the GNU General Public License as published by     the Free Software Foundation, either version 3 of the License, or     (at your option) any later version.     This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU General Public License for more details.     You should have received a copy of the GNU General Public License     along with this program.  If not, see <https://www.gnu.org/licenses/>.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 16521,
        "contract": "contracts/TrustedIssuersRegistry.sol:TrustedIssuersRegistry",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 16524,
        "contract": "contracts/TrustedIssuersRegistry.sol:TrustedIssuersRegistry",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 16721,
        "contract": "contracts/TrustedIssuersRegistry.sol:TrustedIssuersRegistry",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 16729,
        "contract": "contracts/TrustedIssuersRegistry.sol:TrustedIssuersRegistry",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 16849,
        "contract": "contracts/TrustedIssuersRegistry.sol:TrustedIssuersRegistry",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 16955,
        "contract": "contracts/TrustedIssuersRegistry.sol:TrustedIssuersRegistry",
        "label": "_trustedIssuers",
        "offset": 0,
        "slot": "101",
        "type": "t_array(t_contract(IClaimIssuer)16189)dyn_storage"
      },
      {
        "astId": 16961,
        "contract": "contracts/TrustedIssuersRegistry.sol:TrustedIssuersRegistry",
        "label": "_trustedIssuerClaimTopics",
        "offset": 0,
        "slot": "102",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 16968,
        "contract": "contracts/TrustedIssuersRegistry.sol:TrustedIssuersRegistry",
        "label": "_claimTopicsToTrustedIssuers",
        "offset": 0,
        "slot": "103",
        "type": "t_mapping(t_uint256,t_array(t_contract(IClaimIssuer)16189)dyn_storage)"
      },
      {
        "astId": 16973,
        "contract": "contracts/TrustedIssuersRegistry.sol:TrustedIssuersRegistry",
        "label": "__gap",
        "offset": 0,
        "slot": "104",
        "type": "t_array(t_uint256)49_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_contract(IClaimIssuer)16189)dyn_storage": {
        "base": "t_contract(IClaimIssuer)16189",
        "encoding": "dynamic_array",
        "label": "contract IClaimIssuer[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IClaimIssuer)16189": {
        "encoding": "inplace",
        "label": "contract IClaimIssuer",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_uint256,t_array(t_contract(IClaimIssuer)16189)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => contract IClaimIssuer[])",
        "numberOfBytes": "32",
        "value": "t_array(t_contract(IClaimIssuer)16189)dyn_storage"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}