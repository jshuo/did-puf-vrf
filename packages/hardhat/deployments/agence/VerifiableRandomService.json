{
  "address": "0xc5CE3AdA3B12d3bd69dAd15B2e3f9B4c59dd1517",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "have",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "want",
          "type": "address"
        }
      ],
      "name": "CanOnlyBeCalledByPrecompile",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "PUFentropy",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "currentEntropy",
          "type": "uint256"
        }
      ],
      "name": "RandomReceived",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "currentEntropy",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentRequestId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enter",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "entropy",
          "type": "uint256"
        }
      ],
      "name": "executeEntropy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPlayers",
      "outputs": [
        {
          "internalType": "address payable[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "manager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "contract Oracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pickWinner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "players",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tempEntropy",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x3421528e6491045cd93d438cfbe7ed540050b42e4bdca09fb3176a4f4e5353f7",
  "receipt": {
    "to": null,
    "from": "0xfC10126E2F41cbB264BceEE6c6093133AA45f317",
    "contractAddress": "0xc5CE3AdA3B12d3bd69dAd15B2e3f9B4c59dd1517",
    "transactionIndex": 0,
    "gasUsed": "456942",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xd83e3de6ebcf4c1730ab727e746d278e2540e55c9e4a6a35b15949b60a70866a",
    "transactionHash": "0x3421528e6491045cd93d438cfbe7ed540050b42e4bdca09fb3176a4f4e5353f7",
    "logs": [],
    "blockNumber": 12634638,
    "cumulativeGasUsed": "456942",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "86cdab323817fac8203e56882d31ef0d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"CanOnlyBeCalledByPrecompile\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"PUFentropy\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentEntropy\",\"type\":\"uint256\"}],\"name\":\"RandomReceived\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"currentEntropy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentRequestId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enter\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"entropy\",\"type\":\"uint256\"}],\"name\":\"executeEntropy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlayers\",\"outputs\":[{\"internalType\":\"address payable[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract Oracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pickWinner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"players\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tempEntropy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"executeEntropy(uint256,uint256)\":{\"details\":\"`executeEntropy` delegates the data to the `executeImpl` Returns null\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VerifiableRandomService.sol\":\"VerifiableRandomService\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/RandomConsumerBase.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity ^0.8.9;\\n\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\\n/**\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Randomness Consumer contracts must inherit from RandomConsumerBase and\\n * implement `randomCallbackImpl` to override the virtual base function.\\n *\\n * @dev   contract MyContract is RandomConsumerBase {\\n * @dev     function executeImpl(uint256 requestId, uint256 entropy) internal override(RandomConsumerBase) {\\n * @dev       // YOUR CUSTOM CODE HERE\\n * @dev     }\\n * @dev   }\\n * */\\nabstract contract RandomConsumerBase is Context {\\n    error CanOnlyBeCalledByPrecompile(address have, address want);\\n\\n    /**\\n     * @dev Receives `entropy` for `requestId`.  Contract must override this function\\n     *\\n     * Returns null\\n     */\\n    function executeImpl(uint256 requestId, uint256 entropy) internal virtual;\\n\\n    /**\\n     * @dev `executeEntropy` delegates the data to the `executeImpl`\\n     *\\n     * Returns null\\n     */\\n    function executeEntropy(uint256 requestId, uint256 entropy) external {\\n        if (msg.sender != 0x0000000000000000000000000000000000000801) {\\n            revert CanOnlyBeCalledByPrecompile(\\n                msg.sender,\\n                0x0000000000000000000000000000000000000801\\n            );\\n        }\\n        executeImpl(requestId, entropy);\\n    }\\n}\",\"keccak256\":\"0xe48d5dafe715fcdfecaefe60d06a71fada510f99fd8e37313eee8dc91cbcac20\",\"license\":\"GPL-3.0\"},\"contracts/VerifiableRandomService.sol\":{\"content\":\"interface Oracle {\\n    event RandomRequested(address indexed requester, uint256 indexed id);\\n    event RandomIssued(uint256 indexed id, uint256 entropy);\\n    function getEntropy(uint256 id) external view returns (address, uint256);\\n    function requestRandom(address contractAddress) external returns (uint256);\\n}\\n\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\nimport \\\"./RandomConsumerBase.sol\\\";\\n\\ncontract VerifiableRandomService is RandomConsumerBase {\\n    event RandomReceived(uint256 requestId, uint256 PUFentropy, uint256 currentEntropy);\\n    uint256 public currentRequestId = 0;\\n    uint256 public currentEntropy = 0;\\n    uint256 public tempEntropy = 0;\\n    address public manager;\\n    address payable[] public players;\\n    Oracle public oracle = Oracle(0x0000000000000000000000000000000000000801); // Add Oracle contract address as a constant\\n\\n    constructor() {\\n        manager = msg.sender;\\n    }\\n\\n    function enter() public payable {\\n        require(msg.value > .005 ether);\\n        players.push(payable(msg.sender));\\n    }\\n\\n    function random() private view returns (uint) {\\n        return uint(keccak256(abi.encodePacked(block.timestamp, players, tempEntropy)));\\n    }\\n\\n    function pickWinner() public restricted {\\n            oracle.requestRandom(address(this));\\n            // uint256 requestId = oracle.requestRandom(address(this));\\n            // currentRequestId = random()+requestId;\\n            // uint index = currentRequestId % players.length;\\n            // players[index].transfer(address(this).balance);\\n            // players = new address payable[](0);\\n            // emit RandomReceived(currentRequestId, currentRequestId, address(this));\\n\\n    }\\n\\n    modifier restricted() {\\n        require(msg.sender == manager);\\n        _;\\n    }\\n\\n    function getPlayers() public view returns (address payable[] memory) {\\n        return players;\\n    }\\n\\n    function executeImpl(uint256 requestId, uint256 PUFentropy) internal virtual override {\\n\\n        currentRequestId = requestId;\\n        tempEntropy = PUFentropy;\\n        currentEntropy = random();\\n        uint index = currentEntropy % players.length;\\n        players[index].transfer(address(this).balance);\\n        players = new address payable[](0);\\n        emit RandomReceived(currentRequestId, PUFentropy, currentEntropy);\\n    }\\n}\",\"keccak256\":\"0x0dcbe2429cefbc788103b3e957c6b689af26fda2ece95a3d36f71670aa7c9857\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405260008080556001819055600255600580546001600160a01b03191661080117905534801561003157600080fd5b50600380546001600160a01b0319163317905561065f806100536000396000f3fe6080604052600436106100915760003560e01c80637c966b2f116100595780637c966b2f1461013a5780637dc0d1d01461015a5780638b5b9ccc1461017a578063e97dcb621461019c578063f71d96cb146101a457600080fd5b8063481c6a75146100965780634d7d0db5146100d35780635ae2bfdb146100f75780635d495aea1461010d5780635dc8cf6914610124575b600080fd5b3480156100a257600080fd5b506003546100b6906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100df57600080fd5b506100e960025481565b6040519081526020016100ca565b34801561010357600080fd5b506100e960005481565b34801561011957600080fd5b506101226101c4565b005b34801561013057600080fd5b506100e960015481565b34801561014657600080fd5b50610122610155366004610503565b61024b565b34801561016657600080fd5b506005546100b6906001600160a01b031681565b34801561018657600080fd5b5061018f610289565b6040516100ca9190610525565b6101226102eb565b3480156101b057600080fd5b506100b66101bf366004610572565b610342565b6003546001600160a01b031633146101db57600080fd5b6005546040516287131360e31b81523060048201526001600160a01b03909116906304389898906024016020604051808303816000875af1158015610224573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610248919061058b565b50565b610801331461027b57604051630444bf3160e31b8152336004820152610801602482015260440160405180910390fd5b610285828261036c565b5050565b606060048054806020026020016040519081016040528092919081815260200182805480156102e157602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116102c3575b5050505050905090565b6611c37937e0800034116102fe57600080fd5b600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b03191633179055565b6004818154811061035257600080fd5b6000918252602090912001546001600160a01b0316905081565b6000829055600281905561037e610451565b600181905560045460009161039391906105a4565b9050600481815481106103a8576103a86105c6565b60009182526020822001546040516001600160a01b03909116914780156108fc02929091818181858888f193505050501580156103e9573d6000803e3d6000fd5b50604080516000815260208101918290525161040791600491610489565b5060005460015460408051928352602083018590528201527ff6faf575d299d9dad4669d63e412bf6520ed4be07be3bfcb8355976dcdf932629060600160405180910390a1505050565b600042600460025460405160200161046b939291906105dc565b6040516020818303038152906040528051906020012060001c905090565b8280548282559060005260206000209081019282156104de579160200282015b828111156104de57825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906104a9565b506104ea9291506104ee565b5090565b5b808211156104ea57600081556001016104ef565b6000806040838503121561051657600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b818110156105665783516001600160a01b031683529284019291840191600101610541565b50909695505050505050565b60006020828403121561058457600080fd5b5035919050565b60006020828403121561059d57600080fd5b5051919050565b6000826105c157634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052603260045260246000fd5b838152600060208083018554866000528260002060005b828110156106185781546001600160a01b0316845292840192600191820191016105f3565b50505093845290920194935050505056fea2646970667358221220001b76c82c05fa146d5d7c4df5e3a38f7681056f148e510ca168ad2b9521ad8b64736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100915760003560e01c80637c966b2f116100595780637c966b2f1461013a5780637dc0d1d01461015a5780638b5b9ccc1461017a578063e97dcb621461019c578063f71d96cb146101a457600080fd5b8063481c6a75146100965780634d7d0db5146100d35780635ae2bfdb146100f75780635d495aea1461010d5780635dc8cf6914610124575b600080fd5b3480156100a257600080fd5b506003546100b6906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100df57600080fd5b506100e960025481565b6040519081526020016100ca565b34801561010357600080fd5b506100e960005481565b34801561011957600080fd5b506101226101c4565b005b34801561013057600080fd5b506100e960015481565b34801561014657600080fd5b50610122610155366004610503565b61024b565b34801561016657600080fd5b506005546100b6906001600160a01b031681565b34801561018657600080fd5b5061018f610289565b6040516100ca9190610525565b6101226102eb565b3480156101b057600080fd5b506100b66101bf366004610572565b610342565b6003546001600160a01b031633146101db57600080fd5b6005546040516287131360e31b81523060048201526001600160a01b03909116906304389898906024016020604051808303816000875af1158015610224573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610248919061058b565b50565b610801331461027b57604051630444bf3160e31b8152336004820152610801602482015260440160405180910390fd5b610285828261036c565b5050565b606060048054806020026020016040519081016040528092919081815260200182805480156102e157602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116102c3575b5050505050905090565b6611c37937e0800034116102fe57600080fd5b600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b03191633179055565b6004818154811061035257600080fd5b6000918252602090912001546001600160a01b0316905081565b6000829055600281905561037e610451565b600181905560045460009161039391906105a4565b9050600481815481106103a8576103a86105c6565b60009182526020822001546040516001600160a01b03909116914780156108fc02929091818181858888f193505050501580156103e9573d6000803e3d6000fd5b50604080516000815260208101918290525161040791600491610489565b5060005460015460408051928352602083018590528201527ff6faf575d299d9dad4669d63e412bf6520ed4be07be3bfcb8355976dcdf932629060600160405180910390a1505050565b600042600460025460405160200161046b939291906105dc565b6040516020818303038152906040528051906020012060001c905090565b8280548282559060005260206000209081019282156104de579160200282015b828111156104de57825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906104a9565b506104ea9291506104ee565b5090565b5b808211156104ea57600081556001016104ef565b6000806040838503121561051657600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b818110156105665783516001600160a01b031683529284019291840191600101610541565b50909695505050505050565b60006020828403121561058457600080fd5b5035919050565b60006020828403121561059d57600080fd5b5051919050565b6000826105c157634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052603260045260246000fd5b838152600060208083018554866000528260002060005b828110156106185781546001600160a01b0316845292840192600191820191016105f3565b50505093845290920194935050505056fea2646970667358221220001b76c82c05fa146d5d7c4df5e3a38f7681056f148e510ca168ad2b9521ad8b64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "executeEntropy(uint256,uint256)": {
        "details": "`executeEntropy` delegates the data to the `executeImpl` Returns null"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 109,
        "contract": "contracts/VerifiableRandomService.sol:VerifiableRandomService",
        "label": "currentRequestId",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 112,
        "contract": "contracts/VerifiableRandomService.sol:VerifiableRandomService",
        "label": "currentEntropy",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 115,
        "contract": "contracts/VerifiableRandomService.sol:VerifiableRandomService",
        "label": "tempEntropy",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 117,
        "contract": "contracts/VerifiableRandomService.sol:VerifiableRandomService",
        "label": "manager",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 120,
        "contract": "contracts/VerifiableRandomService.sol:VerifiableRandomService",
        "label": "players",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_address_payable)dyn_storage"
      },
      {
        "astId": 126,
        "contract": "contracts/VerifiableRandomService.sol:VerifiableRandomService",
        "label": "oracle",
        "offset": 0,
        "slot": "5",
        "type": "t_contract(Oracle)94"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_address_payable)dyn_storage": {
        "base": "t_address_payable",
        "encoding": "dynamic_array",
        "label": "address payable[]",
        "numberOfBytes": "32"
      },
      "t_contract(Oracle)94": {
        "encoding": "inplace",
        "label": "contract Oracle",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}